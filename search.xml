<?xml version="1.0" encoding="utf-8"?>
<search> 
  
    
    <entry>
      <title>〆 think in java [Note One]</title>
      <link href="/2018/10/30/thinkinjava/"/>
      <url>/2018/10/30/thinkinjava/</url>
      
        <content type="html"><![CDATA[<p><strong><font color="#5A5AAD">⚠  Our destiny offers not the cup of despair, but the chalice of opportunity.   </font></strong></p><h2 id="Step-One-enviroment-–-jdk11"><a href="#Step-One-enviroment-–-jdk11" class="headerlink" title="Step One: enviroment – jdk11"></a><font color="#FF5151">Step One: </font>enviroment – jdk11</h2><a id="more"></a><h2 id="java编程思想-原书第四版"><a href="#java编程思想-原书第四版" class="headerlink" title="java编程思想 原书第四版"></a>java编程思想 原书第四版</h2>]]></content>
      
      
      <categories>
          
          <category> Book Notes </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Technology </tag>
            
            <tag> java </tag>
            
            <tag> think in java </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>〆 Gradle One</title>
      <link href="/2018/10/28/gradleTwo/"/>
      <url>/2018/10/28/gradleTwo/</url>
      
        <content type="html"><![CDATA[<p><strong><font color="#5A5AAD">⚠  Fear can hold you prisoner. Hope can set you free. A strong man can save himself. A great man can save another.   </font></strong></p><h2 id="Gradle：Java-Quickstart-build-a-java-project-with-gradle"><a href="#Gradle：Java-Quickstart-build-a-java-project-with-gradle" class="headerlink" title="Gradle：Java Quickstart: build a java project with gradle"></a><font color="#FF5151">Gradle：Java Quickstart: </font>build a java project with gradle</h2><a id="more"></a><h2 id="basic-java-project-code-list"><a href="#basic-java-project-code-list" class="headerlink" title="basic java project code list"></a>basic java project code list</h2><p>按照gradle的公约构建你的项目，你的产品源码请放在目录 src/main/java 下，你的测试代码请放在目录 src/test/java 下.<br>另外的，任何在目录 src/main/resources 下的文件将会被作为资源(依赖)打包成jar文件。<br>而所有在 src/test/resources 目录的文件则必须要包含classpath来进行运行测试。<br>所有输出的文件将被放在一个新建的build文件夹里，其中 jar文件将被放置在 build/libs目录里。</p><h3 id="gradle-build"><a href="#gradle-build" class="headerlink" title="gradle build"></a>gradle build</h3><p>java插件将给你的项目添加相当少的任务。然后，这些任务都是构建项目非常有用的。在这里面，相当多的任务都是一些构建完整项目的构建工具。在你运行这个命令的时候，gradle将编译和测试你的代码，然后创建一个包含你的main类和依赖资源的jar文件。</p><h4 id="gradle-clean"><a href="#gradle-clean" class="headerlink" title="gradle clean"></a>gradle clean</h4><p>删除所有的构建目录。也就是将build文件夹全部删除掉。经常的。我们使用组合键。<br>比如:</p><ul><li>gradle clean build</li></ul><h4 id="gradle-assemble"><a href="#gradle-assemble" class="headerlink" title="gradle assemble"></a>gradle assemble</h4><p>本人工作中基本没有使用过。<br>api上描述：<br><strong>将你的代码编译和打成jar包，但不会运行单元测试。其他的插件会为这个任务添加更多的工件。例如：如果你使用了war插件，这个任务就也会给你的项目构建一个war的文件。</strong></p><h4 id="gradle-check"><a href="#gradle-check" class="headerlink" title="gradle check"></a>gradle check</h4><p>本人工作中未使用过。<br><strong>将你的代码编译和测试。其他的插件会为这个任务添加更多的审核。例如：如果你使用了checkstyle插件，这个任务也会针对你的源代码运行Checkstyle插件。</strong></p><h3 id="external-dependencies"><a href="#external-dependencies" class="headerlink" title="external dependencies"></a>external dependencies</h3><p><strong>通常，java项目会有很多的外部依赖的jar包文件。我们需要告诉gradle这些jar包在哪里可以找到，来关联到我们的项目里。在gradle里，例如jar包这种自定义的组件，都将放置于一个仓库里。这个仓库可以被用来让我们取出项目中所需要的依赖，或者用来发布成一个自定义组件的项目，或者二者都有。而在官方api文档里的例子，使用的maven仓库。</strong></p><h2 id="Dependency-Management-for-Java-Project"><a href="#Dependency-Management-for-Java-Project" class="headerlink" title="Dependency Management for Java Project"></a>Dependency Management for Java Project</h2><h3 id="Introduction-to-Dependency-Management"><a href="#Introduction-to-Dependency-Management" class="headerlink" title="Introduction to Dependency Management"></a>Introduction to Dependency Management</h3>]]></content>
      
      
      <categories>
          
          <category> Book Notes </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Technology </tag>
            
            <tag> Gradle Java </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>〆 推荐算法实战 项亮 [学习笔记四]</title>
      <link href="/2018/10/11/recommender4/"/>
      <url>/2018/10/11/recommender4/</url>
      
        <content type="html"><![CDATA[<p><strong><font color="#5A5AAD">⚠  Had I not seen the sun, I could have borne the shade.   </font></strong></p><h2 id="Step-Four-enviroment-–-python3-7"><a href="#Step-Four-enviroment-–-python3-7" class="headerlink" title="Step Four: enviroment – python3.7"></a><font color="#FF5151">Step Four: </font>enviroment – python3.7</h2><a id="more"></a><h2 id="基于图的模型-graph-based-model"><a href="#基于图的模型-graph-based-model" class="headerlink" title="基于图的模型 graph-based model"></a>基于图的模型 graph-based model</h2><h3 id="用户行为数据的二分图表示"><a href="#用户行为数据的二分图表示" class="headerlink" title="用户行为数据的二分图表示"></a>用户行为数据的二分图表示</h3><p>一般的，图中定点的相关性取决于三个方面:</p><ul><li> 两个顶点之间的路径数；</li><li> 两个顶点之间路径的长度；</li><li> 两个顶点之间的路径经过的顶点。<br>而相关性高的一对顶点一般具有如下特征：</li><li> 两个顶点之间有很多路径相连；</li><li> 连接两个顶点之间的路径长度都比较短；</li><li> 连接两个顶点之间的路径不会经过出度比较大的顶点。</li></ul><p><img src="1.png" alt=""></p><p>举一个简单的例子，如图2-19所示，用户A和物品c、e没有边相连，但是用户A和物品c有两条长度为3的路径相连，用户A和物品e有两条长度为3的路径相连。那么，顶点A与e之间的相关性要高于顶点A与c，因而物品e在用户A的推荐列表中应该排在物品c之前，因为顶点A与e之间有两条路径——（A, b, C, e）和（A, d, D, e）。其中，（A, b, C, e）路径经过的顶点的出度为（3, 2, 2, 2），而（A, d, D, e）路径经过的顶点的出度为（3, 2, 3, 2）。因此，（A, d, D, e）经过了一个出度比较大的顶点D，所以（A, d, D, e）对顶点A与e之间相关性的贡献要小于（A, b, C, e）。</p><p><strong>注意</strong></p><font color="red">仅凭上述观点，我无法得出e优先级高于c，因为c也是（3, 2, 3, 2）和（3, 2, 2, 2）的两条线，求解？</font><h4 id="基于随机游走的PersonalRank算法"><a href="#基于随机游走的PersonalRank算法" class="headerlink" title="基于随机游走的PersonalRank算法"></a>基于随机游走的PersonalRank算法</h4>]]></content>
      
      
      <categories>
          
          <category> Book Notes </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Technology </tag>
            
            <tag> Recommender Arithmetic </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>〆 推荐算法实战 项亮 [学习笔记三]</title>
      <link href="/2018/09/21/recommender3/"/>
      <url>/2018/09/21/recommender3/</url>
      
        <content type="html"><![CDATA[<p><strong><font color="#5A5AAD">⚠  All man’s success is no accident.   </font></strong></p><h2 id="Step-Three-enviroment-–-python3-7"><a href="#Step-Three-enviroment-–-python3-7" class="headerlink" title="Step Three: enviroment – python3.7"></a><font color="#FF5151">Step Three: </font>enviroment – python3.7</h2><a id="more"></a><h2 id="基于用户的协同过滤算法"><a href="#基于用户的协同过滤算法" class="headerlink" title="基于用户的协同过滤算法"></a>基于用户的协同过滤算法</h2><p>昨天晚上有点跑偏，研究了一会pandas和numpy，也写了好几个小demo。今天开始再次阅读项亮老师的书，直接从第二章利用用户行为数据开始：</p><p>通过观看，在图表2-3发现，本书中关于用户行为的统一表述</p><p><img src="1.png" alt="用户行为的统一表述"></p><h3 id="常用的数据分析的数据集"><a href="#常用的数据分析的数据集" class="headerlink" title="常用的数据分析的数据集"></a>常用的数据分析的数据集</h3><blockquote><p>Delicious<br>CiteULike<br>Netflix (数据有过浅层次处理，没有过于稀疏的数据)<br>MovieLens (数据有过浅层次处理，没有过于稀疏的数据)</p></blockquote><p>对用户u推荐N个物品（记为R(u)），令用户u在测试集上喜欢的物品集合为T(u)，然后可以通<br>过准确率/召回率评测推荐算法的精度：</p><h4 id="召回率"><a href="#召回率" class="headerlink" title="召回率"></a>召回率</h4><p><img src="2.png" alt="召回率"></p><h4 id="准确率"><a href="#准确率" class="headerlink" title="准确率"></a>准确率</h4><p><img src="3.png" alt="准确率"></p><p>公式中 | 的意思不是绝对值，而是集合的基数(也就是集合中元素的个数)，维基百科的解释是：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cardinality: &#123;\displaystyle |S|&#125; |S|, read &quot;the cardinality of the set S&quot;</span><br></pre></td></tr></table></figure><h4 id="信息熵"><a href="#信息熵" class="headerlink" title="信息熵"></a>信息熵</h4><p>在信息论中，熵（英语：entropy）是接收的每条消息中包含的信息的平均量，又被称为信息熵、信源熵、平均自信息量。这里，“消息”代表来自分布或数据流中的事件、样本或特征。（熵最好理解为不确定性的量度而不是确定性的量度，因为越随机的信源的熵越大。）来自信源的另一个特征是样本的概率分布。这里的想法是，比较不可能发生的事情，当它发生了，会提供更多的信息。由于一些其他的原因，把信息（熵）定义为概率分布的对数的相反数是有道理的。事件的概率分布和每个事件的信息量构成了一个随机变量，这个随机变量的均值（即期望）就是这个分布产生的信息量的平均值（即熵）。熵的单位通常为比特，但也用Sh、nat、Hart计量，取决于定义用到对数的底。</p><p>采用概率分布的对数作为信息的量度的原因是其可加性。例如，投掷一次硬币提供了1 Sh的信息，而掷m次就为m位。更一般地，你需要用log2(n)位来表示一个可以取n个值的变量。</p><p><a href="https://www.zhihu.com/question/20992022" target="_blank" rel="noopener">知乎上对于熵的解释–我认为比较好理解的</a></p><h2 id="基于物品的协同过滤算法"><a href="#基于物品的协同过滤算法" class="headerlink" title="基于物品的协同过滤算法"></a>基于物品的协同过滤算法</h2><p>内容类似基于用户 ，userCF 和 itemCF</p><h2 id="隐语义模型"><a href="#隐语义模型" class="headerlink" title="隐语义模型"></a>隐语义模型</h2><h3 id="最优控制-optimal-control-与最优化-optimization"><a href="#最优控制-optimal-control-与最优化-optimization" class="headerlink" title="最优控制(optimal control)与最优化(optimization)"></a>最优控制(optimal control)与最优化(optimization)</h3><p>最优控制（optimal control）可以理解为最优化（optimization）领域下的一个子领域。最优化理论一般研究涉及最优化问题的建模与求解。一个最优化模型一般包括目标函数，决策变量，以及约束条件这三个基本要素。最优化问题的目标是选择一组满足约束条件决策变量，使得目标函数最优（如最小化成本，或最大化收益）。常见的问题包括线性规划，整数规划等。最优化控制问题可视为最优化问题中的一种，该类问题主要针对控制系统进行优化。系统有特定的状态（state），以及相应的控制器（controller），该类问题的目标一般也是选取最优的控制策略（control policy，即告诉我们在什么状态下进行什么样的行动），以使得系统最优（可以是成本最小，也可以是收益最大）。以库存控制问题为例，可将当前库存量视为系统状态，决策变量即为订货量，最优的策略即为在什么样的库存量下，订多少货，使得总体的库存持有成本最低。上述库存问题，同样可以建立成一个数学规划的模型（目标函数，决策变量，约束）。最优化控制理论根据问题的特点，又可细分为确定型最优化理论（deterministic）与随机型最优化理论（stochastic），</p><p>根据系统输入输出之间的关系又可分为:线性最优化控制理论（linear）与非线性最优化控制理论（nonlinear）。不同的问题因为其特点不同，也会对应不同的方法，这些就难以一一列举了。</p><h3 id="鲁棒性-健壮性-Robustness"><a href="#鲁棒性-健壮性-Robustness" class="headerlink" title="鲁棒性/健壮性 Robustness"></a>鲁棒性/健壮性 Robustness</h3><p>指系统在扰动或不确定的情况下仍能保持它们的特征行为。<br>鲁棒决策，一种尽可能对不确定性免疫，并在作出后相当长时间仍看上去不错的决策。<br>鲁棒统计，一种在其假定被数据产生在的真实模型所违背的情况下依然能工作良好的统计技术。</p><p>（英语：Robustness）是指一个计算机系统在执行过程中处理错误，以及算法在遭遇输入、运算等异常时继续正常运行的能力。 诸如模糊测试之类的形式化方法中，必须通过制造错误的或不可预期的输入来验证程序的健壮性。很多商业产品都可用来测试软件系统的健壮性。健壮性也是失效评定分析中的一个方面。</p><h3 id="结构风险函数-经验风险函数"><a href="#结构风险函数-经验风险函数" class="headerlink" title="结构风险函数/经验风险函数"></a>结构风险函数/经验风险函数</h3><h3 id="损失函数-目标函数-代价函数"><a href="#损失函数-目标函数-代价函数" class="headerlink" title="损失函数/目标函数/代价函数"></a>损失函数/目标函数/代价函数</h3><p>损失函数（loss function）是用来估量你模型的预测值f(x)与真实值Y的不一致程度，它是一个非负实值函数,通常使用L(Y, f(x))来表示，损失函数越小，模型的鲁棒性就越好。损失函数是经验风险函数的核心部分，也是结构风险函数重要组成部分</p><p><a href="https://www.zhihu.com/question/52398145" target="_blank" rel="noopener">参见知乎上关于此内容的文章</a></p><p><a href="http://www.csuldw.com/2016/03/26/2016-03-26-loss-function/" target="_blank" rel="noopener">常见的几种损失函数:对数、平方、指数、Hinge</a></p><h3 id="过拟合"><a href="#过拟合" class="headerlink" title="过拟合"></a>过拟合</h3><p>在统计学中，过拟合（英语：overfitting，或称过度拟合）现象是指在拟合一个统计模型时，使用过多参数。</p><p>对比于可获取的数据总量来说，一个荒谬的模型只要足够复杂，是可以完美地适应数据。过拟合一般可以视为违反<strong>奥卡姆剃刀</strong>原则。</p><p>当可选择的参数的自由度超过数据所包含信息内容时，这会导致最后（拟合后）模型使用任意的参数，这会减少或破坏模型一般化的能力更甚于适应数据。过拟合的可能性不只取决于参数个数和数据，也跟模型架构与数据的一致性有关。此外对比于数据中预期的噪声或错误数量，跟模型错误的数量也有关。</p><p>过拟合现象的观念对机器学习也是很重要的。通常一个学习算法是借由训练示例来训练的。亦即预期结果的示例是可知的。而学习者则被认为须达到可以预测出其它示例的正确的结果，因此，应适用于一般化的情况而非只是训练时所使用的现有数据（根据它的归纳偏向）。然而，学习者却会去适应训练数据中太特化但又随机的特征，特别是在当学习过程太久或示例太少时。在过拟合的过程中，当预测训练示例结果的表现增加时，应用在未知数据的表现则变更差。</p><p>在统计和机器学习中，为了避免过拟合现象，须要使用额外的技巧（如交叉验证、提早停止、贝斯信息量准则、赤池信息量准则或模型比较），以指出何时会有更多训练而没有导致更好的一般化。人工神经网上的过拟合过程亦被认知为过度训练（英语：overtraining）。在treatmeant learning中，使用最小最佳支持值（英语：minimum best support value）来避免过拟合。</p><p>相对于过拟合是指，使用过多参数，以致太适应数据而非一般情况，另一种常见的现象是使用太少参数，以致于不适应数据，这则称为乏适（英语：underfitting，或称：拟合不足）现象。</p><p>过拟合就是说模型在训练数据上的效果远远好于在测试集上的性能。</p><h2 id="LFM和基于邻域的方法的比较"><a href="#LFM和基于邻域的方法的比较" class="headerlink" title="LFM和基于邻域的方法的比较"></a>LFM和基于邻域的方法的比较</h2><p>LFM是一种基于机器学习的方法，具有比较好的理论基础。这个方法和基于邻域的方法（比<br>如UserCF、ItemCF）相比，各有优缺点。下面将从不同的方面对比LFM和基于邻域的方法。</p><ul><li> 理论基础 LFM具有比较好的理论基础，它是一种学习方法，通过优化一个设定的指标<br>建立最优的模型。基于邻域的方法更多的是一种基于统计的方法，并没有学习过程。</li><li> 离线计算的空间复杂度 基于邻域的方法需要维护一张离线的相关表。在离线计算相关<br>表的过程中，如果用户/物品数很多，将会占据很大的内存。假设有M个用户和N个物品，<br>在计算相关表的过程中，我们可能会获得一张比较稠密的临时相关表（尽管最终我们对<br>每个物品只保留K个最相关的物品，但在中间计算过程中稠密的相关表是不可避免的），<br>那么假设是用户相关表，则需要O(M<em>M)的空间，而对于物品相关表，则需要O(N</em>N)的空<br>间。而LFM在建模过程中，如果是F个隐类，那么它需要的存储空间是O(F*(M+N))，这在<br>M和N很大时可以很好地节省离线计算的内存。在Netflix Prize中，因为用户数很庞大<br>（40多万），很少有人使用UserCF算法（据说需要30 GB左右的内存），而LFM由于大量节<br>省了训练过程中的内存（只需要4 GB），从而成为Netflix Prize中最流行的算法。</li><li> 离线计算的时间复杂度 假设有M个用户、N个物品、K条用户对物品的行为记录。那么，<br>UserCF计算用户相关表的时间复杂度是O(N <em> (K/N)^2)，而ItemCF计算物品相关表的时间<br>复杂度是O(M</em>(K/M)^2)。而对于LFM，如果用F个隐类，迭代S次，那么它的计算复杂度<br>是O(K <em> F </em> S)。那么，如果K/N &gt; F<em>S，则代表UserCF的时间复杂度低于LFM，如果<br>K/M&gt;F</em>S，则说明ItemCF的时间复杂度低于LFM。在一般情况下，LFM的时间复杂度要<br>稍微高于UserCF和ItemCF，这主要是因为该算法需要多次迭代。但总体上，这两种算法<br>在时间复杂度上没有质的差别。</li><li> 在线实时推荐 UserCF和ItemCF在线服务算法需要将相关表缓存在内存中，然后可以在<br>线进行实时的预测。以ItemCF算法为例，一旦用户喜欢了新的物品，就可以通过查询内<br>存中的相关表将和该物品相似的其他物品推荐给用户。因此，一旦用户有了新的行为，<br>而且该行为被实时地记录到后台的数据库系统中，他的推荐列表就会发生变化。而从LFM<br>的预测公式可以看到，LFM在给用户生成推荐列表时，需要计算用户对所有物品的兴趣<br>权重，然后排名，返回权重最大的N个物品。那么，在物品数很多时，这一过程的时间<br>复杂度非常高，可达O(M<em>N</em>F)。因此，LFM不太适合用于物品数非常庞大的系统，如<br>果要用，我们也需要一个比较快的算法给用户先计算一个比较小的候选列表，然后再用<br>LFM重新排名。另一方面，LFM在生成一个用户推荐列表时速度太慢，因此不能在线实<br>时计算，而需要离线将所有用户的推荐结果事先计算好存储在数据库中。因此，LFM不<br>能进行在线实时推荐，也就是说，当用户有了新的行为后，他的推荐列表不会发生变化。</li><li> 推荐解释 ItemCF算法支持很好的推荐解释，它可以利用用户的历史行为解释推荐结果。<br>但LFM无法提供这样的解释，它计算出的隐类虽然在语义上确实代表了一类兴趣和物品，<br>却很难用自然语言描述并生成解释展现给用户。</li></ul>]]></content>
      
      
      <categories>
          
          <category> Book Notes </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Technology </tag>
            
            <tag> Recommender Arithmetic </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>〆 推荐算法实战 项亮 [学习笔记二]</title>
      <link href="/2018/09/20/recommender2/"/>
      <url>/2018/09/20/recommender2/</url>
      
        <content type="html"><![CDATA[<p><strong><font color="#5A5AAD">⚠  Just across the step beyond fear more courage.   </font></strong></p><h2 id="Step-Two-enviroment-–-python3-7"><a href="#Step-Two-enviroment-–-python3-7" class="headerlink" title="Step Two: enviroment – python3.7"></a><font color="#FF5151">Step Two: </font>enviroment – python3.7</h2><a id="more"></a><h2 id="实战演练"><a href="#实战演练" class="headerlink" title="实战演练"></a>实战演练</h2><p>按照书籍上所示网址，进行数据的下载：</p><p>选择older datasets里面的<a href="http://www.grouplens.org/node/73" target="_blank" rel="noopener">MovieLens 1M Dataset</a></p><p>下载完成后就到了实现设计里面的分类器，可是，小白的我一脸懵逼，无法继续。原理什么我都可以看懂，可是，分类器的数据源呢？</p><h3 id="数据源从数据库中获取"><a href="#数据源从数据库中获取" class="headerlink" title="数据源从数据库中获取"></a>数据源从数据库中获取</h3><p>于是我使用navcat工具，导入mysql，选择导入的txt文档(在每个文档的第一行手动添加上表头，对应于数据库的字段)，选择每一个文件，批量导入。</p><p>完成后，突然发现，我如果已经有了结构化的数据，完全不需要再用分类器，可是直接用sql实现，与本书代码实现出发点貌似不一致，于是，认为，方向不对。</p><h3 id="数据使用pandas"><a href="#数据使用pandas" class="headerlink" title="数据使用pandas"></a>数据使用pandas</h3><p>由于前面思路的错误，google搜索，MovieLens data analysis</p><p><a href="http://www.gregreda.com/2013/10/26/using-pandas-on-the-movielens-dataset/" target="_blank" rel="noopener">发现文章使用pandas分析movielens数据</a></p><p>于是开始使用pandas</p><h4 id="安装各种库"><a href="#安装各种库" class="headerlink" title="安装各种库"></a>安装各种库</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">pip install pandas</span><br><span class="line">pip install numpy</span><br></pre></td></tr></table></figure><h5 id="numpy"><a href="#numpy" class="headerlink" title="numpy"></a>numpy</h5><p>NumPy is the fundamental package for scientific computing with Python. It contains among other things:</p><ul><li>a powerful N-dimensional array object|一个强大的N维数组对象</li><li>sophisticated (broadcasting) functions|精致而又复杂(传播广)的方法</li><li>tools for integrating C/C++ and Fortran code|继承了C/C++以及公式代码</li><li>useful linear algebra, Fourier transform, and random number capabilities|继承了线性代数、傅里叶转换、随机数等有用的功能</li></ul><p>Besides its obvious scientific uses, NumPy can also be used as an efficient multi-dimensional container of generic data. Arbitrary data-types can be defined. This allows NumPy to seamlessly and speedily integrate with a wide variety of databases.</p><p><em>除了这些在科学计算上显著的使用，numpy也被用作为一个高效多维的通用数据容器。任意数据类型都可以在这里被定义。这可以帮助numpy无缝并且高效的集成各种各样的数据库</em></p><p>NumPy is licensed under the BSD license, enabling reuse with few restrictions.<br><em>numpy的证书是基于BSD认证的，所以它可以轻易被重用而只有很少的限制</em></p><p>上述内容为官网对numpy的解释，由此可知，我们使用numpy进行科学计算。类似最简单的获取随机数等。</p><h5 id="pandas"><a href="#pandas" class="headerlink" title="pandas"></a>pandas</h5><p>pandas is an open source, BSD-licensed library providing high-performance, easy-to-use data structures and data analysis tools for the Python programming language.</p><p><em>pandas是一个开源的，基于BSD证书的python程序语言库，他提供了一个高性能、易用的数据结构和数据分析工具</em></p><p>pandas is a NumFOCUS sponsored project. This will help ensure the success of development of pandas as a world-class open-source project, and makes it possible to donate to the project.</p><p><em>pandas是一个由NumFOCUS赞助的一个项目，这将有助于确保pandas成功发展为世界一流的开源项目，并使得捐赠成为可能。</em></p><p>pandas has full-featured, high performance in-memory join operations idiomatically very similar to relational databases like SQL. These methods perform significantly better (in some cases well over an order of magnitude better) than other open source implementations (like base::merge.data.frame in R). The reason for this is careful algorithmic design and the internal layout of the data in DataFrame.</p><p><strong>pandas具有功能齐全、高性能的内存连接操作，这与我们惯用的SQL之类的关系数据库非常相似。这些方法性能要比其他(如base:: sum .data.frame in R)的开源实现好得多(在某些情况：比如数量级纬度)。其原因是他的精心算法设计和DataFrame中数据的内部布局。</strong></p><p>See the cookbook for some advanced strategies.</p><p>Users who are familiar with SQL but new to pandas might be interested in a comparison with SQL.</p><p>pandas provides a single function, merge(), as the entry point for all standard database join operations between DataFrame objects:</p><h4 id="使用pandas转换数据结构"><a href="#使用pandas转换数据结构" class="headerlink" title="使用pandas转换数据结构"></a>使用pandas转换数据结构</h4><h5 id="收集原始数据"><a href="#收集原始数据" class="headerlink" title="收集原始数据"></a>收集原始数据</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">import pandas as pd</span><br><span class="line"></span><br><span class="line"># the prefix of url</span><br><span class="line">url_prefix = &apos;E:/math/demoOne/util/dataset/rawData/&apos;</span><br><span class="line"></span><br><span class="line"># read csv</span><br><span class="line">def readCsv(path, sep, cols, coding):</span><br><span class="line">    if(coding):</span><br><span class="line">        return pd.read_csv(path,</span><br><span class="line">            sep=sep, names=cols, encoding=coding)</span><br><span class="line"></span><br><span class="line">    return pd.read_csv(path,</span><br><span class="line">        sep=sep, names=cols, encoding=&apos;latin-1&apos;, engine=&apos;python&apos;)</span><br><span class="line"></span><br><span class="line"># read data from users.dat</span><br><span class="line">user_cols = [&apos;user_id&apos;, &apos;gender&apos;, &apos;age&apos;, &apos;occupation&apos;, &apos;zip_code&apos;]</span><br><span class="line">users = readCsv(url_prefix + &apos;users.dat&apos;, &apos;::&apos;, user_cols, None)</span><br><span class="line"></span><br><span class="line"># read data form movies.dat</span><br><span class="line">movie_cols = [&apos;movie_id&apos;, &apos;title&apos;, &apos;genre&apos;]</span><br><span class="line">movies = readCsv(url_prefix + &apos;movies.dat&apos;, &apos;::&apos;, movie_cols, None)</span><br><span class="line"></span><br><span class="line"># read data form ratings.dat</span><br><span class="line">rating_cols = [&apos;user_id&apos;, &apos;movie_id&apos;, &apos;rating&apos;, &apos;time_stamp&apos;]</span><br><span class="line">ratings = readCsv(url_prefix + &apos;ratings.dat&apos;, &apos;::&apos;, rating_cols, None)</span><br><span class="line"></span><br><span class="line">print(&quot;*******users*******&quot;, &quot;\n&quot;, users, &quot;\n&quot;, &quot;*******movies*******&quot;, &quot;\n&quot;, </span><br><span class="line">    movies, &quot;\n&quot;, &quot;*******ratings*******&quot;, &quot;\n&quot;, ratings)</span><br></pre></td></tr></table></figure><p>打印后就可以看到原始数据的基本结构。</p><p><strong>Note 1: readCsv方法中engine=’python’可以不填写，不填写时候默认使用C引擎，速度比python快，但是支持范围上没有python引擎强大，比如分析“::”，可能会产生错误提示</strong></p><p><strong>Note 2: url_prefix为我的数据源所在的文件夹绝对路径</strong></p><h5 id="merge-数据-数据合并"><a href="#merge-数据-数据合并" class="headerlink" title="merge 数据(数据合并)"></a>merge 数据(数据合并)</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">pd.merge(left, right, how=&apos;inner&apos;, on=None, left_on=None, right_on=None,</span><br><span class="line">         left_index=False, right_index=False, sort=True,</span><br><span class="line">         suffixes=(&apos;_x&apos;, &apos;_y&apos;), copy=True, indicator=False,</span><br><span class="line">         validate=None)</span><br></pre></td></tr></table></figure><blockquote><ul><li>left: A DataFrame object.</li><li>right: Another DataFrame object.</li><li>on: Column or index level names to join on. Must be found in both the left and right DataFrame objects. If not passed and left_index and right_index are False, the intersection of the columns in the DataFrames will be inferred to be the join keys.</li><li>left_on: Columns or index levels from the left DataFrame to use as keys. Can either be column names, index level names, or arrays with length equal to the length of the DataFrame.</li><li>right_on: Columns or index levels from the right DataFrame to use as keys. Can either be column names, index level names, or arrays with length equal to the length of the DataFrame.</li><li>left_index: If True, use the index (row labels) from the left DataFrame as its join key(s). In the case of a DataFrame with a MultiIndex (hierarchical), the number of levels must match the number of join keys from the right DataFrame.</li><li>right_index: Same usage as left_index for the right DataFrame</li><li>how: One of ‘left’, ‘right’, ‘outer’, ‘inner’. Defaults to inner. See below for more detailed description of each method.</li><li>sort: Sort the result DataFrame by the join keys in lexicographical order. Defaults to True, setting to False will improve performance substantially in many cases.</li><li>suffixes: A tuple of string suffixes to apply to overlapping columns. Defaults to (‘_x’, ‘_y’).</li><li>copy: Always copy data (default True) from the passed DataFrame objects, even when reindexing is not necessary. Cannot be avoided in many cases but may improve performance / memory usage. The cases where copying can be avoided are somewhat pathological but this option is provided nonetheless.</li><li>indicator: Add a column to the output DataFrame called _merge with information on the source of each row. _merge is Categorical-type and takes on a value of left_only for observations whose merge key only appears in ‘left’ DataFrame, right_only for observations whose merge key only appears in ‘right’ DataFrame, and both if the observation’s merge key is found in both.</li><li>validate : string, default None. If specified, checks if merge is of specified type.<blockquote><ul><li>“one_to_one” or “1:1”: checks if merge keys are unique in both left and right datasets.</li><li>“one_to_many” or “1:m”: checks if merge keys are unique in left dataset.</li><li>“many_to_one” or “m:1”: checks if merge keys are unique in right dataset.</li><li>“many_to_many” or “m:m”: allowed, but does not result in checks.</li></ul></blockquote></li></ul></blockquote><p>具体示例如图所示：</p><p><img src="1.png" alt=""><br><img src="2.png" alt=""><br><img src="3.png" alt=""></p><p>看懂之后，我们将之前的movies和ratings组合起来</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"># movies and ratings</span><br><span class="line">movie_ratings = pd.merge(movies, ratings)</span><br><span class="line"># movie_ratings and users</span><br><span class="line">lens = pd.merge(movie_ratings, users)</span><br></pre></td></tr></table></figure><h4 id="数据分析"><a href="#数据分析" class="headerlink" title="数据分析"></a>数据分析</h4><h5 id="获取电影评分top25"><a href="#获取电影评分top25" class="headerlink" title="获取电影评分top25"></a>获取电影评分top25</h5><p>Top 25 most rated movies</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">most_rated = lens.groupby(&apos;title&apos;).size().sort_values(ascending=False)[:25]</span><br><span class="line">print(most_rated)</span><br></pre></td></tr></table></figure><p><strong>其中表示内容为：</strong> <em>按照title排序，并记录出现的次数，按照从大到小排列，取前25个</em></p><p>获得同样结果的更简单的写法：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">lens.title.value_counts()[:25]</span><br></pre></td></tr></table></figure><p>至此，回归主题，用分类器对数据进行分类</p><p>说道分类器又是一些长篇大论，话不多说，先安装一个机器学习的python类库</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip install scikit-learn</span><br></pre></td></tr></table></figure><p>然后，继续回归主题，项亮的书籍，先把整章看完，在来统一结合成一个完整的代码。</p>]]></content>
      
      
      <categories>
          
          <category> Book Notes </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Technology </tag>
            
            <tag> Recommender Arithmetic </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>〆 os.path [python os module]</title>
      <link href="/2018/09/20/pythonOsPath/"/>
      <url>/2018/09/20/pythonOsPath/</url>
      
        <content type="html"><![CDATA[<p><strong><font color="#5A5AAD">Don’t put off until tomorrow what you can do today.</font></strong></p><h2 id="How-to-use-os-path-python模块之os模块探究。"><a href="#How-to-use-os-path-python模块之os模块探究。" class="headerlink" title="How to use os.path: python模块之os模块探究。"></a><font color="#FF5151">How to use os.path: </font>python模块之os模块探究。</h2><font style="color: #394F6A; font-size: 20px; font-family: '微软雅黑'">[探究版本] python 3.7.0</font><a id="more"></a><h2 id="importlib"><a href="#importlib" class="headerlink" title="importlib"></a>importlib</h2><p><strong>关于python里的导包路径等等一说，以前一直没有一个清晰的认识，就只知道是单纯的给文件夹里增加一个空的文件：<strong>init</strong>.py</strong></p><p>而基于这种不求甚解的做法，初期帮助了我很快胜任的工作，emmm，姑且算胜任吧。但是很快，我就发现，不理解底层，成为了我的一大瓶颈，于是，突然惊醒，开始抱着极客的态度，开始了深入的记录。</p><p>基于我使用的python3.7里，通过api查询path得到一个新的包，importlib，是python3.1开始新增加的东西，具体是什么，我们先来看一看。</p><p>话不多说，先上源码：<a href="https://github.com/python/cpython/blob/3.7/Lib/importlib/__init__.py" target="_blank" rel="noopener">importlib</a></p><h3 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h3><p>The purpose of the importlib package is two-fold. One is to provide the implementation of the import statement (and thus, by extension, the <strong>import</strong>() function) in Python source code. This provides an implementation of import which is portable to any Python interpreter. This also provides an implementation which is easier to comprehend than one implemented in a programming language other than Python.</p><p>Two, the components to implement import are exposed in this package, making it easier for users to create their own custom objects (known generically as an importer) to participate in the import process.</p><p>importlib的用途主要有两个方面。</p><ul><li>在python的源代码里(由此，通过对 <strong>import</strong> 模块的扩展)，提供了一个导入清单的实现。<br>对于任何python解释器，本库提供了更便捷的导入实现。<br>它也提供了一个比用Python以外的编程语言实现更容易理解的实现。</li><li>在同一个包里的组件的导入实现更加的显式，(通常被用来创建一个导入文件)<br>用户可以将自己创建的文件更容易的导入到进程里。</li></ul>]]></content>
      
      
      <categories>
          
          <category> Basic Knowledge </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
            <tag> os.path </tag>
            
            <tag> path </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>〆 angular6 [start new program]</title>
      <link href="/2018/09/18/angular/"/>
      <url>/2018/09/18/angular/</url>
      
        <content type="html"><![CDATA[<p><strong><font color="#5A5AAD">Nothing is impossible, the word itself says “I’m possible”!</font></strong></p><h2 id="Build-your-first-angular-program-使用angular构建你的前端项目。"><a href="#Build-your-first-angular-program-使用angular构建你的前端项目。" class="headerlink" title="Build your first angular program: 使用angular构建你的前端项目。"></a><font color="#FF5151">Build your first angular program: </font>使用angular构建你的前端项目。</h2><font style="color: #394F6A; font-size: 20px; font-family: '微软雅黑'">[主要语言] typescript/html/css</font><a id="more"></a><h3 id="安装angular"><a href="#安装angular" class="headerlink" title="安装angular"></a>安装angular</h3><p>首先你需要安装node环境，至于安装方式这里不再赘述，我们的内容从nodejs安装完成后的sass安装开始:</p><blockquote><p>npm install -g @angular/cli     （windows）</p></blockquote><h3 id="创建项目"><a href="#创建项目" class="headerlink" title="创建项目"></a>创建项目</h3><blockquote><p>ng new angular-tour-of-heroes</p></blockquote><h3 id="开启ng服务"><a href="#开启ng服务" class="headerlink" title="开启ng服务"></a>开启ng服务</h3><blockquote><p>cd angular-tour-of-heroes<br>ng serve –open</p></blockquote><h4 id="业务需要使用tree导航栏，我选择"><a href="#业务需要使用tree导航栏，我选择" class="headerlink" title="业务需要使用tree导航栏，我选择"></a>业务需要使用tree导航栏，我选择</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install --save @angular/material @angular/cdk @angular/animations</span><br></pre></td></tr></table></figure><p>将模块添加进项目</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ng add @angular/material</span><br></pre></td></tr></table></figure><h4 id="增加ng-alain-为了loading"><a href="#增加ng-alain-为了loading" class="headerlink" title="增加ng-alain 为了loading"></a>增加ng-alain 为了loading</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ng add ng-alain</span><br></pre></td></tr></table></figure><p><em>最终上面两个我都没用，我采用了primeng(冷…)</em></p><p>项目里安装</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">npm install primeng --save</span><br><span class="line">npm install primeicons --save</span><br></pre></td></tr></table></figure><p><a href="https://github.com/ng-alain" target="_blank" rel="noopener">摘抄一个关于ng-alain脚手架的模块规范</a></p><p><strong>一直以来 AppModule、CoreModule、SharedModule 模块使用没有很明确的规范，很容易让产生乱用。Angular模块目标是为了使组件、指令、服务和管道功能块更内聚，并每一个功能区域形成独立的业务领域或实用工具的集合。</strong></p><h5 id="AppModule"><a href="#AppModule" class="headerlink" title="AppModule"></a>AppModule</h5><p>根模块，用于引导 Angular 启动；它非常适合导入一些需要在整个应用到处需要的模块，例如：主题系统、用户主认证模块、权限模块等模块，以及一些全局性HTTP拦截器、国际化服务等。</p><h5 id="CoreModule"><a href="#CoreModule" class="headerlink" title="CoreModule"></a>CoreModule</h5><p>核心模块只会被导入一次，它等同 AppModule，但我们更应该把它当成一个纯服务类模块，例如：消息、数据访问等。</p><h5 id="SharedModule"><a href="#SharedModule" class="headerlink" title="SharedModule"></a>SharedModule</h5><p>我们叫它共享模块；它不应该出现 providers，因为 ShareModule 会在所有业务模块中被导入，这会导致服务被覆盖。</p><p>而特殊的，在angular官网里提到:</p><blockquote><p>坚持把数据操作和与数据交互的逻辑重构到服务里。<br>坚持让数据服务来负责 XHR 调用、本地储存、内存储存或者其它数据操作。</p></blockquote><p>所以，比如关于http请求获取数据，两个原则会有轻微冲突，这个应该写入业务里还是写入服务里，大家可以根据自己的业务复杂度选择。</p><p>我的选择是写入服务里，遵循angular的原则。</p><p><strong>下图所示:我的简单项目demo结构为</strong></p><p><img src="angular.png" alt="我的简单项目demo结构为"></p>]]></content>
      
      
      <categories>
          
          <category> angular </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Technology </tag>
            
            <tag> angular </tag>
            
            <tag> tutorial </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>〆 sass [manage your css]</title>
      <link href="/2018/09/17/sass/"/>
      <url>/2018/09/17/sass/</url>
      
        <content type="html"><![CDATA[<p><strong><font color="#5A5AAD">⚠ I never really noticed that I had to decide, to play someone’s game or live my own life.</font></strong></p><h2 id="manage-your-css-by-sass-使用SASS管理自己的css。"><a href="#manage-your-css-by-sass-使用SASS管理自己的css。" class="headerlink" title="manage your css by sass 使用SASS管理自己的css。"></a><font color="#FF5151">manage your css by sass </font>使用SASS管理自己的css。</h2><font style="color: #394F6A; font-size: 20px; font-family: '微软雅黑'">[主要语言] sass</font><a id="more"></a><h1 id="install-sass"><a href="#install-sass" class="headerlink" title="install sass"></a>install sass</h1><h2 id="命令行方式"><a href="#命令行方式" class="headerlink" title="命令行方式"></a>命令行方式</h2><p><strong>关于sass的使用，通常有图形化界面和命令行两种方式，作为一个有轻微技术情怀的少年，我选择使用命令行的方式</strong></p><h3 id="sass-安装"><a href="#sass-安装" class="headerlink" title="sass 安装"></a>sass 安装</h3><p>首先你需要安装node环境，至于安装方式这里不再赘述，我们的内容从nodejs安装完成后的sass安装开始:</p><blockquote><p>npm install -g sass     （anywhere）<br>choco install sass     （windows）<br>brew install sass/sass/sass     （mac）</p></blockquote><h3 id="sass-关键字"><a href="#sass-关键字" class="headerlink" title="sass 关键字"></a>sass 关键字</h3><h4 id="缩进控制层级关系"><a href="#缩进控制层级关系" class="headerlink" title="缩进控制层级关系"></a>缩进控制层级关系</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">nav &#123;</span><br><span class="line">  ul &#123;</span><br><span class="line">    margin: 0;</span><br><span class="line">    padding: 0;</span><br><span class="line">    list-style: none;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  li &#123; display: inline-block; &#125;</span><br><span class="line"></span><br><span class="line">  a &#123;</span><br><span class="line">    display: block;</span><br><span class="line">    padding: 6px 12px;</span><br><span class="line">    text-decoration: none;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="自定义变量"><a href="#自定义变量" class="headerlink" title="$自定义变量"></a>$自定义变量</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">$font-stack:    Helvetica, sans-serif;</span><br><span class="line">$primary-color: #333;</span><br><span class="line"></span><br><span class="line">body &#123;</span><br><span class="line">  font: 100% $font-stack;</span><br><span class="line">  color: $primary-color;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="import-关键字-拆分css"><a href="#import-关键字-拆分css" class="headerlink" title="@import 关键字 拆分css"></a>@import 关键字 拆分css</h4><blockquote><p>优点：单个css更小，整体更便于层级管理和后期维护<br>缺点：每次import都需要一次request请求</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">// _reset.scss</span><br><span class="line"></span><br><span class="line">html,</span><br><span class="line">body,</span><br><span class="line">ul,</span><br><span class="line">ol &#123;</span><br><span class="line">  margin:  0;</span><br><span class="line">  padding: 0;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">// base.scss</span><br><span class="line"></span><br><span class="line">@import &apos;reset&apos;;</span><br><span class="line"></span><br><span class="line">body &#123;</span><br><span class="line">  font: 100% Helvetica, sans-serif;</span><br><span class="line">  background-color: #efefef;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="mixin-and-include"><a href="#mixin-and-include" class="headerlink" title="@mixin and @include"></a>@mixin and @include</h4><p>多用于批量前缀或者后缀等重复性工作的处理</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">@mixin transform($property) &#123;</span><br><span class="line">  -webkit-transform: $property;</span><br><span class="line">      -ms-transform: $property;</span><br><span class="line">          transform: $property;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.box &#123; @include transform(rotate(30deg)); &#125;</span><br></pre></td></tr></table></figure><h4 id="extend-关键字"><a href="#extend-关键字" class="headerlink" title="@extend 关键字"></a>@extend 关键字</h4><p>主要用于：单个选择器的样式批量添加</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">// This CSS won&apos;t print because %equal-heights is never extended.</span><br><span class="line">%equal-heights &#123;</span><br><span class="line">  display: flex;</span><br><span class="line">  flex-wrap: wrap;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">// This CSS will print because %message-shared is extended.</span><br><span class="line">%message-shared &#123;</span><br><span class="line">  border: 1px solid #ccc;</span><br><span class="line">  padding: 10px;</span><br><span class="line">  color: #333;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.message &#123;</span><br><span class="line">  @extend %message-shared;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.success &#123;</span><br><span class="line">  @extend %message-shared;</span><br><span class="line">  border-color: green;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.error &#123;</span><br><span class="line">  @extend %message-shared;</span><br><span class="line">  border-color: red;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.warning &#123;</span><br><span class="line">  @extend %message-shared;</span><br><span class="line">  border-color: yellow;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="混合运算"><a href="#混合运算" class="headerlink" title="混合运算"></a>混合运算</h4><p>在sass里，css可以进行数据相关混合运算</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">.container &#123; width: 100%; &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">article[role=&quot;main&quot;] &#123;</span><br><span class="line">  float: left;</span><br><span class="line">  width: 600px / 960px * 100%;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> css </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Technology </tag>
            
            <tag> tutorial </tag>
            
            <tag> css </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>〆 推荐算法实战 项亮 [学习笔记一]</title>
      <link href="/2018/09/12/recommender1/"/>
      <url>/2018/09/12/recommender1/</url>
      
        <content type="html"><![CDATA[<p><strong><font color="#5A5AAD">⚠  The best of all ways to strengthen our days is to steal hours from the night.   </font></strong></p><h2 id="Step-One-enviroment-–-python3-7"><a href="#Step-One-enviroment-–-python3-7" class="headerlink" title="Step One: enviroment – python3.7"></a><font color="#FF5151">Step One: </font>enviroment – python3.7</h2><a id="more"></a><h1 id="评测指标"><a href="#评测指标" class="headerlink" title="评测指标"></a>评测指标</h1><h3 id="数据集分类"><a href="#数据集分类" class="headerlink" title="数据集分类"></a>数据集分类</h3><p>一般的，数据集分成四类</p><blockquote><ul><li>系统检索到的相关文档（A）</li><li>系统检索到的不相关文档（B）</li><li>相关但是系统没有检索到的文档（C）</li><li>不相关且没有被系统检索到的文档（D）</li></ul></blockquote><h3 id="评测指标-1"><a href="#评测指标-1" class="headerlink" title="评测指标"></a>评测指标</h3><blockquote><p>用户满意度<br>预测准确度</p><blockquote><p>评分预测<br>TopN 预测<br>覆盖率<br>多样性<br>新颖性<br>惊喜度<br>信任度<br>实时性<br>健壮性<br>商业目标</p></blockquote></blockquote><h4 id="评分预测"><a href="#评分预测" class="headerlink" title="评分预测"></a>评分预测</h4><p>评分预测的预测准确度一般通过均方根误差（RMSE）和平均绝对误差（MAE）计算。</p><p><strong>关于RMSE和MAE这两个指标的优缺点， Netflix认为RMSE加大了对预测不准的用户物品评分的惩罚（平方项的惩罚），因而对系统的评测更加苛刻。研究表明，如果评分系统是基于整数建立的（即用户给的评分都是整数），那么对预测结果取整会降低MAE的误差。</strong></p><h4 id="TopN预测"><a href="#TopN预测" class="headerlink" title="TopN预测"></a>TopN预测</h4><p><strong>网站在提供推荐服务时，一般是给用户一个个性化的推荐列表，这种推荐叫做TopN推荐。TopN推荐的预测准确率一般通过准确率（precision）/召回率（recall）度量。</strong></p><p><strong>注意</strong> ：有的时候，为了全面评测TopN推荐的准确率和召回率，一般会选取不同的推荐列表长度N，计算出一组准确率/召回率，然后画出准确率/召回率曲线（precision/recall curve）。</p><h4 id="覆盖率"><a href="#覆盖率" class="headerlink" title="覆盖率"></a>覆盖率</h4><h5 id="长尾理论"><a href="#长尾理论" class="headerlink" title="长尾理论"></a>长尾理论</h5><p>长尾理论生动而形象地反映了我们的经济和文化，正在产生从为数较少的主流产品和市场（需求曲线的头部）向数量众多的狭窄市场（需求曲线的尾部）转移的现象和趋势。其基本原理是：只要存储和流通的渠道足够大，需求不旺或销量不佳的产品所共同占据的市场份额可以和那些少数热销产品所占据的市场份额相匹敌，甚至有过之而无不及。</p><p><strong>覆盖率（coverage）描述一个推荐系统对物品长尾的发掘能力。覆盖率有不同的定义方法，<br>最简单的定义为推荐系统能够推荐出来的物品占总物品集合的比例。</strong></p><p>注意: 覆盖率为100%的推荐系统可以将每个物品都推荐给至少一个用户。</p><p>通过研究物品在推荐列表中出现次数的分布描述推荐系统挖掘长尾的能力。如果这个分布比<br>较平，那么说明推荐系统的覆盖率较高，而如果这个分布较陡峭，说明推荐系统的覆盖率较低。<br>在信息论和经济学中有两个著名的指标可以用来定义覆盖率。</p><blockquote><p>信息熵<br>基尼因数</p></blockquote><h5 id="基尼因数原理"><a href="#基尼因数原理" class="headerlink" title="基尼因数原理"></a>基尼因数原理</h5><p>设实际收入分配曲线和收入分配绝对平等曲线之间的面积为A，实际收入分配曲线右下方的面积为B。并以A除以（A+B）的商表示不平等程度。这个数值被称为基尼系数或称洛伦茨系数。如果A为零，基尼系数为零，表示收入分配完全平等；如果B为零则系数为1，收入分配绝对不平等。收入分配越是趋向平等，洛伦茨曲线的弧度越小，基尼系数也越小，反之，收入分配越是趋向不平等，洛伦茨曲线的弧度越大，那么基尼系数也越大。另外，可以参看帕累托指数(是指对收入分布不均衡的程度的度量）。</p><h5 id="洛伦兹曲线"><a href="#洛伦兹曲线" class="headerlink" title="洛伦兹曲线"></a>洛伦兹曲线</h5><p>洛伦兹曲线（Lorenz curve），也译为“劳伦兹曲线”。就是，在一个总体（国家、地区）内，以“最贫穷的人口计算起一直到最富有人口”的人口百分比对应各个人口百分比的收入百分比的点组成的曲线。</p><h1 id="不理解"><a href="#不理解" class="headerlink" title="不理解:"></a><font style="color: blue;font-weight: bold;font-size: 16px;">不理解:</font></h1><p>&lt;选择累积数量作为x轴的原因: 是因为连续性需要吗？&gt;</p><h5 id="马太效应"><a href="#马太效应" class="headerlink" title="马太效应"></a>马太效应</h5><p>社会学领域有一个著名的马太效应，即所谓强者更强，弱者更弱的效应。如果一个系统会增<br>大热门物品和非热门物品的流行度差距，让热门的物品更加热门，不热门的物品更加不热门，那<br>么这个系统就有马太效应。  – 搜索引擎的PageRank算法也具有一定的马太效应。</p><p>推荐系统的初衷是希望消除马太效应，使得各种物品都<br>能被展示给对它们感兴趣的某一类人群。但是，很多研究表明现在主流的推荐算法（比如协同过<br>滤算法）是具有马太效应的。评测推荐系统是否具有马太效应的简单办法就是使用基尼系数。如<br>果G1是从初始用户行为中计算出的物品流行度的基尼系数，G2是从推荐列表中计算出的物品流<br>行度的基尼系数，那么如果G2 &gt; G1，就说明推荐算法具有马太效应。<br>数值大，代表分布不平衡差距更大，所以，等于增大了变化度，所以具有马太效应。</p><h4 id="多样性"><a href="#多样性" class="headerlink" title="多样性"></a>多样性</h4><p><strong>尽管用户的兴趣在较长的时间跨度中是一样的，但具体到用户访问推荐系统的某一刻，<br>其兴趣往往是单一的，那么如果推荐列表只能覆盖用户的一个兴趣点，而这个兴趣点不是用户这<br>个时刻的兴趣点，推荐列表就不会让用户满意。反之，如果推荐列表比较多样，覆盖了用户绝大<br>多数的兴趣点，那么就会增加用户找到感兴趣物品的概率。因此给用户的推荐列表也需要满足用<br>户广泛的兴趣，即具有多样性。</strong></p><h1 id="不理解-多样性描述了推荐列表中物品两两之间的不相似性。因此，多样性和相似性是对应的。假设si-j-0-1--定义了物品i和j之间的相似度，那么用户u的推荐列表R-u-的多样性"><a href="#不理解-多样性描述了推荐列表中物品两两之间的不相似性。因此，多样性和相似性是对应的。假设si-j-0-1--定义了物品i和j之间的相似度，那么用户u的推荐列表R-u-的多样性" class="headerlink" title="不理解: 多样性描述了推荐列表中物品两两之间的不相似性。因此，多样性和相似性是对应的。假设si j ( , ) [0,1]  定义了物品i和j之间的相似度，那么用户u的推荐列表R(u)的多样性"></a><font style="color: blue;font-weight: bold;font-size: 16px;">不理解:</font> 多样性描述了推荐列表中物品两两之间的不相似性。因此，多样性和相似性是对应的。假设si j ( , ) [0,1]  定义了物品i和j之间的相似度，那么用户u的推荐列表R(u)的多样性</h1><p>多样性通俗解析: 可以提供4种不同的推荐列表：</p><blockquote><p>A列表中有10部动作片，没有动画片；<br>B列表中有10部动画片，没有动作片；<br>C列表中有8部动作片和2部动画片；<br>D列表有5部动作片和5部动画片。</p></blockquote><p>在这个例子中，一般认为C列表是最好的，因为它具有一定的多样性，但又考虑到了用户的主要兴趣。A满足了用户的主要兴趣，但缺少多样性，D列表过于多样，没有考虑到用户的主要兴趣。B列表即没有考虑用户的主要兴趣，也没有多样性，因此是最差的。</p><h4 id="新颖性"><a href="#新颖性" class="headerlink" title="新颖性"></a>新颖性</h4><p><strong>新颖的推荐是指给用户推荐那些他们以前没有听说过的物品。</strong></p><font style="color: red;">如何在不牺牲精度的情况下提高多样性和新颖性</font><h4 id="惊喜度"><a href="#惊喜度" class="headerlink" title="惊喜度"></a>惊喜度</h4><p><strong>如果推荐结果和用户的历史兴趣不相似，但却让用户觉得满意，那么就可以说推荐结果的惊喜度很高，而推荐的新颖性仅仅取决于用户是否听说过这个推荐结果。</strong></p><h4 id="信任度"><a href="#信任度" class="headerlink" title="信任度"></a>信任度</h4><p><strong>提高推荐系统的信任度主要有两种方法。首先需要增加推荐系统的透明度（transparency），而增加推荐系统透明度的主要办法是提供推荐解释。只有让用户了解推荐系统的运行机制，让用户认同推荐系统的运行机制，才会提高用户对推荐系统的信任度。其次是考虑用户的社交网络信息，利用用户的好友信息给用户做推荐，并且用好友进行推荐解释。这是因为用户对他们的好友一般都比较信任，因此如果推荐的商品是好友购买过的，那么他们对推荐结果就会相对比较信任。</strong></p><h4 id="实时性"><a href="#实时性" class="headerlink" title="实时性"></a>实时性</h4><p>推荐系统的实时性包括两个方面。</p><blockquote><p>首先，推荐系统需要实时地更新推荐列表来满足用户新的行为变化。比如，当一个用户购买了iPhone，如果推荐系统能够立即给他推荐相关配件，那么肯定比第二天再给用户推荐相关配件更有价值。很多推荐系统都会在离线状态每天计算一次用户推荐列表，然后于在线期间将推荐列表展示给用户。这种设计显然是无法满足实时性的。与用户行为相应的实时性，可以通过推荐列表的变化速率来评测。如果推荐列表在用户有行为后变化不大，或者没有变化，说明推荐系统的实时性不高。<br>实时性的第二个方面是推荐系统需要能够将新加入系统的物品推荐给用户。这主要考验了推荐系统处理物品冷启动的能力。关于如何将新加入系统的物品推荐给用户，本书将在后面的章节进行讨论，而对于新物品推荐能力，我们可以利用用户推荐列表中有多大比例的物品是当天新加的来评测。</p></blockquote><h4 id="健壮性"><a href="#健壮性" class="headerlink" title="健壮性"></a>健壮性</h4><p><strong>任何一个能带来利益的算法系统都会被人攻击，这方面最典型的例子就是搜索引擎。搜索引擎的作弊和反作弊斗争异常激烈，这是因为如果能让自己的商品成为热门搜索词的第一个搜索果，会带来极大的商业利益。推荐系统目前也遇到了同样的作弊问题，而健壮性（即robust,鲁棒性）指标衡量了一个推荐系统抗击作弊的能力。</strong></p><p>常见的健壮性的体现：</p><blockquote><p>设计推荐系统时尽量使用代价比较高的用户行为。比如，如果有用户购买行为和用户浏览行为，那么主要应该使用用户购买行为，因为购买需要付费，所以攻击购买行为的代价远远大于攻击浏览行为。<br>在使用数据前，进行攻击检测，从而对数据进行清理。</p></blockquote><h4 id="商业目标"><a href="#商业目标" class="headerlink" title="商业目标"></a>商业目标</h4><p><strong>*设计推荐系统时需要考虑最终的商业目标，而网站使用推荐系统的目的除了满足用户发现内容的需求，也需要利用推荐系统加快实现商业上的指标。</strong></p><h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><p>如何优化离线指标来提高在线指标是推荐系统研究的重要问题：<br>离线实验的优化目标是：</p><blockquote><p>最大化预测准确度<br>使得 覆盖率 &gt; A<br>多样性 &gt; B<br>新颖性 &gt; C</p></blockquote><h2 id="评测维度"><a href="#评测维度" class="headerlink" title="评测维度"></a>评测维度</h2><p><strong>在评测系统中还需要考虑评测维度，比如一个推荐算法，虽然整体性能不好，但可能在某种情况下性能比较好，而增加评测维度的目的就是知道一个算法在什么情况下性能最好。这样可以为融合不同推荐算法取得最好的整体性能带来参考。</strong></p><p>常见的评测纬度分类:</p><blockquote><p>用户维度 主要包括用户的人口统计学信息、活跃度以及是不是新用户等。<br>物品维度 包括物品的属性信息、流行度、平均分以及是不是新加入的物品等。<br>时间维度 包括季节，是工作日还是周末，是白天还是晚上等。</p></blockquote><h1 id="利用用户行为数据"><a href="#利用用户行为数据" class="headerlink" title="利用用户行为数据"></a>利用用户行为数据</h1><p>著名的 啤酒与尿布 故事</p><p>用户行为数据中蕴涵着很多不是那么显而易见的规律，而个性化推荐算法的任务就是通过计算机去发现这些规律，从而为产品的设计提供指导，提高用户体验。</p><p><strong>基于用户行为分析的推荐算法是个性化推荐系统的重要算法，学术界一般将这种类型的算法称为协同过滤算法。顾名思义，协同过滤就是指用户可以齐心协力，通过不断地和网站互动，使自己的推荐列表能够不断过滤掉自己不感兴趣的物品，从而越来越满足自己的需求。</strong></p><h2 id="用户行为数据简介"><a href="#用户行为数据简介" class="headerlink" title="用户行为数据简介"></a>用户行为数据简介</h2><p>用户行为在个性化推荐系统中一般分两种——显性反馈行为（explicit feedback）和隐性反馈<br>行为（implicit feedback）。</p><p>有代表性的数据集主要分类为:</p><blockquote><p>无上下文信息的隐性反馈数据集每一条行为记录仅仅包含用户ID和物品ID。Book-Crossing就是这种类型的数据集。<br>无上下文信息的显性反馈数据集 每一条记录包含用户ID、物品ID和用户对物品的评分。<br>有上下文信息的隐性反馈数据集 每一条记录包含用户ID、物品ID和用户对物品产生行为的时间戳。Lastfm数据集就是这种类型的数据集。<br>有上下文信息的显性反馈数据集 每一条记录包含用户ID、物品ID、用户对物品的评分和评分行为发生的时间戳。Netflix Prize提供的就是这种类型的数据集。</p></blockquote><p>协同过滤算法的方法常见的有:</p><blockquote><p>基于邻域的方法（neighborhood-based）<br>隐语义模型（latent factor model）<br>基于图的随机游走算法（random walk on graph）等。在这些方法中，</p></blockquote><p>最著名的、在业界得到最广泛应用的算法是基于邻域的方法，而基于邻域的方法主要包含下<br>面两种算法。</p><blockquote><p>基于用户的协同过滤算法 这种算法给用户推荐和他兴趣相似的其他用户喜欢的物品。<br>基于物品的协同过滤算法 这种算法给用户推荐和他之前喜欢的物品相似的物品。</p></blockquote><h3 id="基于用户的协同过滤算法"><a href="#基于用户的协同过滤算法" class="headerlink" title="基于用户的协同过滤算法"></a>基于用户的协同过滤算法</h3><blockquote><p>(1) 找到和目标用户兴趣相似的用户集合。<br>(2) 找到这个集合中的用户喜欢的，且目标用户没有听说过的物品推荐给目标用户。</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> Book Notes </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Technology </tag>
            
            <tag> Recommender Arithmetic </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>〆 debian系统搭配xfce4桌面 [linuxNetwork]</title>
      <link href="/2018/09/12/debian1/"/>
      <url>/2018/09/12/debian1/</url>
      
        <content type="html"><![CDATA[<p><strong><font color="#5A5AAD">You will always be able to make more money, but you can not make more time.</font></strong></p><h2 id="How-to-configure-your-desktop-in-debian-当你安装完debian系统之后的配置-网络，虚拟机，eclipse，svn等"><a href="#How-to-configure-your-desktop-in-debian-当你安装完debian系统之后的配置-网络，虚拟机，eclipse，svn等" class="headerlink" title="How to configure your desktop in debian: 当你安装完debian系统之后的配置(网络，虚拟机，eclipse，svn等)"></a><font color="#FF5151">How to configure your desktop in debian: </font>当你安装完debian系统之后的配置(网络，虚拟机，eclipse，svn等)</h2><font style="color: #394F6A; font-size: 20px; font-family: '微软雅黑'">[主要内容] linux初体验</font><a id="more"></a><h2 id="系统"><a href="#系统" class="headerlink" title="系统"></a>系统</h2><ul><li>系统选择上，我使用的debian stretch 分支（9.5.0）</li><li>图形化桌面选择是 xfce4</li><li>系统安装的启动盘制作有五个软件:</li></ul><blockquote><p>Universal (推荐：作者使用)<br>unetbootin (推荐)<br>Rufus （群友风铃木推荐）<br>poweriso （群友原道推荐）<br>软通碟 (不推荐: 网上有人说会出现各种问题)</p></blockquote><p>安装时候我选择的是dd刻录整个U盘</p><p>安装时候我选择的是Universal里面step1的最后一个选项，dd刻录整个U盘，因为其他形式下，我有时候安装会报错。</p><p>具体安装不多做介绍，网上有大量的详细教程(搜索教程时候请带上你选择的软件名)</p><p>其中安装linux系统的分区介绍，<a href="http://isdux.com/2018/01/18/linuxSetup/">点击这里：</a></p><h2 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h2><h3 id="安装-aptitude"><a href="#安装-aptitude" class="headerlink" title="安装 aptitude"></a>安装 aptitude</h3><p>debian下我个人比较常用的包管理工具，安装某个软件的时候，将会自动安装所有的依赖。删除也是会同样删除相关依赖。</p><p><strong>注意：别的版本系统不清楚，针对debian9.5.0系统(我的hp笔记本)，安装aptitude共需要三个文件，分别如下所示：</strong></p><blockquote><p><a href="https://packages.debian.org/stretch/libcwidget3v5" target="_blank" rel="noopener">libcwidget3v5</a><br><a href="https://packages.debian.org/stretch/aptitude-common" target="_blank" rel="noopener">aptitude-common</a><br><a href="https://packages.debian.org/stretch/aptitude" target="_blank" rel="noopener">aptitude</a></p></blockquote><p>下载完成后的安装顺序如列表所示，从上到下，安装命令为：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">dpkg -i **************.deb</span><br></pre></td></tr></table></figure><h4 id="aptitude-常用命令"><a href="#aptitude-常用命令" class="headerlink" title="aptitude 常用命令"></a>aptitude 常用命令</h4><ul><li>aptitude search 文件名</li><li>aptitude install 文件名</li><li>aptitude update</li><li>aptitude upgrade</li></ul><h2 id="换源"><a href="#换源" class="headerlink" title="换源"></a>换源</h2><h3 id="更换国内源"><a href="#更换国内源" class="headerlink" title="更换国内源"></a>更换国内源</h3><p>更换的是国内的stretch源，喜欢保持系统时刻更新的发烧友使用</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">/**</span><br><span class="line"> * 备份原有的源配置文件</span><br><span class="line"> */</span><br><span class="line">$ cp /etc/apt/sources.list /etc/apt/sources.listbak</span><br><span class="line"></span><br><span class="line">/**</span><br><span class="line"> * 删除该源配置文件</span><br><span class="line"> */</span><br><span class="line">$ rm -f /etc/apt/sources.list</span><br><span class="line"></span><br><span class="line"> /**</span><br><span class="line"> * 生成国内的源配置文件</span><br><span class="line"> */</span><br><span class="line">$ echo &quot;deb http://ftp.cn.debian.org/debian/ stretch main&quot; &gt; /etc/apt/sources.list</span><br><span class="line">$ echo &quot;deb http://ftp.cn.debian.org/debian/ stretch-updates main&quot; &gt;&gt; /etc/apt/sources.list </span><br><span class="line">$ echo &quot;deb http://ftp.cn.debian.org/debian-security stretch/updates main&quot; &gt;&gt; /etc/apt/sources.list</span><br><span class="line"></span><br><span class="line"> /**</span><br><span class="line"> * 更新源</span><br><span class="line"> */</span><br><span class="line">$ apt-get update  或者 $ aptitude update</span><br></pre></td></tr></table></figure><h3 id="修改源-扩展更多软件包"><a href="#修改源-扩展更多软件包" class="headerlink" title="修改源(扩展更多软件包)"></a>修改源(扩展更多软件包)</h3><p><strong>本版本debian默认自带nano文本编辑器</strong></p><blockquote><p>$ nano /etc/apt/sources.list （打开源配置文件）<br>将每一个 deb xxxxx 最后增加 non-free（aptitude search 将会发现新增很多模块）</p></blockquote><h3 id="安装无线网络驱动"><a href="#安装无线网络驱动" class="headerlink" title="安装无线网络驱动"></a>安装无线网络驱动</h3><p><strong>device not ready(firmware missing)</strong></p><p>刚刚安装好的debian系统，没有无线网络的模块，所以需要安装对应网卡驱动，网上有很多教程，下载对应网卡的驱动，但是，我比较懒，就直接用aptitude安装通用网卡驱动解决<br>(感觉本方法像windows下安装万能网卡驱动，哈哈哈)</p><ul><li>aptitude search firmware- (搜索固件的名字)</li><li>aptitude install firmware-realtek</li><li>aptitude install firmware-ralink<br>+（单独安装ralink这个也可以，不过安装会有warn提示，强迫症患者还是两个都安装吧）</li></ul><h2 id="linux-更新"><a href="#linux-更新" class="headerlink" title="linux 更新"></a>linux 更新</h2><p><strong>aptitude update &amp; aptitude upgrade</strong></p><p>这一步操作可以每个星期进行一次(非强迫症可以不进行)</p><p>查看系统内核版本</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ uname -a</span><br></pre></td></tr></table></figure><p>修改系统时间<br>参考链接里面的步骤，我们只进行前半部分即可。</p><p><a href="https://www.cnblogs.com/royfans/p/8056270.html" target="_blank" rel="noopener">只需要1-1,2,3然后重启电脑就设置成功</a></p><h3 id="常用软件安装"><a href="#常用软件安装" class="headerlink" title="常用软件安装"></a>常用软件安装</h3><h4 id="vmware"><a href="#vmware" class="headerlink" title="vmware"></a>vmware</h4><p><a href="https://www.howtoing.com/install-vmware-workstation-in-linux" target="_blank" rel="noopener">vm安装参考</a></p><p>安装谷歌中文输入法</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">aptitude install fcitx</span><br><span class="line">aptitude install fcitx-googlepinyin</span><br></pre></td></tr></table></figure><p>重启电脑后配置fcitx，在configure里新增googlepinyin输入法</p><h4 id="google-浏览器"><a href="#google-浏览器" class="headerlink" title="google 浏览器"></a>google 浏览器</h4><p><a href="https://blog.csdn.net/demorngel/article/details/72571153" target="_blank" rel="noopener">debian安装chrome浏览器</a></p><p>注意：这里安装chrome浏览器必须翻墙。因为源为google提供。我用的自己搭建的vps,有时间了给大家分享干货。</p><h4 id="安装vim编辑器以及tilda-雷神之锤下拉框–替代自带的命令行-美化用"><a href="#安装vim编辑器以及tilda-雷神之锤下拉框–替代自带的命令行-美化用" class="headerlink" title="安装vim编辑器以及tilda(雷神之锤下拉框–替代自带的命令行-美化用)"></a>安装vim编辑器以及tilda(雷神之锤下拉框–替代自带的命令行-美化用)</h4><p>aptitude install vim &amp; aptitude install tilda</p><h3 id="安装eclipse"><a href="#安装eclipse" class="headerlink" title="安装eclipse"></a>安装eclipse</h3><p><a href="https://www.eclipse.org/downloads/packages/" target="_blank" rel="noopener">文件下载地址</a></p><p>其中，有多个版本的eclipse ide供你选择，由于个人原因，我选择:<br>Eclipse IDE for Java and DSL Developers</p>]]></content>
      
      
      <categories>
          
          <category> Basic Knowledge </category>
          
      </categories>
      
      
        <tags>
            
            <tag> debian </tag>
            
            <tag> xfce </tag>
            
            <tag> Basic Knowledge </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>〆 Rational Software Architect(UML)</title>
      <link href="/2018/06/26/rationalSoftwareArchitect/"/>
      <url>/2018/06/26/rationalSoftwareArchitect/</url>
      
        <content type="html"><![CDATA[<p><strong><font color="#5A5AAD">No one is born hating another person because of the color of his skin. They can be taught to love, for love comes more naturally to the human heart.</font></strong></p><h2 id="How-to-use-the-uml-kit-RSA-记录我开始学习使用IBM的uml建模工具的点点滴滴。"><a href="#How-to-use-the-uml-kit-RSA-记录我开始学习使用IBM的uml建模工具的点点滴滴。" class="headerlink" title="How to use the uml kit(RSA):记录我开始学习使用IBM的uml建模工具的点点滴滴。"></a><font color="#FF5151">How to use the uml kit(RSA):</font>记录我开始学习使用IBM的uml建模工具的点点滴滴。</h2><font style="color: #394F6A; font-size: 20px; font-family: '微软雅黑'">[Series] Part One</font><a id="more"></a><h2 id="Essentials-of-modeling-with-Rational-Software-Architect-Self-paced-training"><a href="#Essentials-of-modeling-with-Rational-Software-Architect-Self-paced-training" class="headerlink" title="Essentials of modeling with Rational Software Architect - Self-paced training"></a>Essentials of modeling with Rational Software Architect - Self-paced training</h2>]]></content>
      
      
      <categories>
          
          <category> Unified Modeling Language </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Technology </tag>
            
            <tag> UML </tag>
            
            <tag> Unified Modeling Language </tag>
            
            <tag> Rational Software Architect </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>〆 推荐系统入门教材推荐</title>
      <link href="/2018/06/25/recommanderSystemStudyResources/"/>
      <url>/2018/06/25/recommanderSystemStudyResources/</url>
      
        <content type="html"><![CDATA[<p><strong><font color="#5A5AAD">A pearl is a temple built by pain around a grain of sand.</font></strong></p><h2 id="How-to-study-RS-整理了一些学习推荐系统的相关文献和书籍资料。"><a href="#How-to-study-RS-整理了一些学习推荐系统的相关文献和书籍资料。" class="headerlink" title="How to study RS: 整理了一些学习推荐系统的相关文献和书籍资料。"></a><font color="#FF5151">How to study RS: </font>整理了一些学习推荐系统的相关文献和书籍资料。</h2><p><font style="color: #394F6A; font-size: 20px; font-family: '微软雅黑'">[主要语言] C++/java</font><br><a id="more"></a></p><h3 id="历史经典数据"><a href="#历史经典数据" class="headerlink" title="历史经典数据"></a>历史经典数据</h3><p>Segaran T. Programming collective intelligence: building smart web 2.0 applications[M]. O’Reilly Media, 2007.寓教于乐的一本入门教材，附有可以直接动手实践的toy级别代码</p><p>Shapira B. Recommender systems handbook[M]. Springer, 2011. 推荐系统可做枕头，也应该放在枕边的书籍，看了半本多。如果将该书及其中的参考文献都看完并理解，那恭喜你，你已经对这个领域有深入理解了</p><p>Jannach D, Zanker M, Felfernig A, et al. Recommender systems: an introduction[M]. Cambridge University Press, 2010. 可以认为是2010年前推荐系统论文的综述集合</p><p>Celma O. Music recommendation and discovery[M]. Springer, 2010. 主要内容集中在音乐推荐，领域非常专注于音乐推荐，包括选取的特征，评测时如何考虑音乐因素</p><p>Word sense disambiguation: Algorithms and applications[M]. Springer Science+ Business Media, 2006. 如果涉及到关键词推荐，或是文本推荐， 则可以查阅该书</p><p>数据挖掘资料<br>Han J, Kamber M, Pei J. Data mining: concepts and techniques[M]. Morgan kaufmann, 2006. 数据挖掘方面的handbook，教科书类型，虽然厚，却通俗易懂(再次提醒，要了解某一领域，找本该领域的啥啥handbook耐心认真读完，那你基本对该领域有一定认识了)</p><p>Chakrabarti S. Mining the Web: Discovering knowledge from hypertext data[M]. Morgan Kaufmann, 2003.介绍了一个搜索引擎中的大部分技术，包括spider，索引建立，内部的机器学习算法，信息检索，而且非常具有实用性</p><p>Liu B. Web data mining: exploring hyperlinks, contents, and usage data[M]. Springer, 2007. 如果说 Mining the Web: Discovering knowledge from hypertext data更偏web mining更偏整体，工程的话，这本书就更偏策略</p><p>Wu X, Kumar V, Quinlan J R, et al. Top 10 algorithms in data mining[J]. Knowledge and Information Systems, 2008, 14(1): 1-37. 专门将2006年评选出来的10大数据挖掘算法拎了出来讲讲</p><p>Rajaraman A, Ullman J D. Mining of massive datasets[M]. Cambridge University Press, 2012.介绍如何使用hadoop进行数据挖掘，如果有hadoop环境则非常实用</p><p>Feldman R, Sanger J. The text mining handbook: advanced approaches in analyzing unstructured data[M]. Cambridge University Press, 2007.文本挖掘的handbook</p><p>机器学习资料<br>Tom M Mitchell,Machine Learning, McGraw-Hill Science/Engineering/Mat, 1997，非常早起的机器学习书籍，非常适合入门， 浅显易懂， 但对于工业界应用， 只能说是Toy级别的算法。</p><p>Bishop C M, Nasrabadi N M. Pattern recognition and machine learning[M]. New York: springer, 2006. 进阶型的书籍，对每种算法都有较为具体的理论介绍</p><p>课程： 机器学习（Stanford-&gt;Andrew Ng）<a href="http://v.163.com/special/opencourse/machinelearning.html，大名鼎鼎的Andrew" target="_blank" rel="noopener">http://v.163.com/special/opencourse/machinelearning.html，大名鼎鼎的Andrew</a> Ng的机器学习公开课，网易上字幕版本；配合课程stanford cs229对应的handout及习题一起学习效果更好</p><p>信息检索<br>Agirre, Eneko, and Philip Glenny Edmonds, eds. Word sense disambiguation: Algorithms and applications. Vol. 33. Springer Science+ Business Media, 2006.</p><p>Manning C D, Raghavan P, Schütze H. Introduction to information retrieval[M]. Cambridge: Cambridge University Press, 2008.</p><p>MOFFAT A A, Bell T C. Managing gigabytes: compressing and indexing documents and images[M]. Morgan Kaufmann, 1999.一本很老的介绍搜索引擎的书了，不过09年的时候看还是被震撼到了，书中各种变着戏法使用几十M内存处理上G数据，感觉非常牛叉。</p><h3 id="相关会议"><a href="#相关会议" class="headerlink" title="相关会议"></a>相关会议</h3><p>对于推荐系统领域，直接相关的会议不多，但由于推荐系统会涉及到数据挖掘、机器学习等方面的知识，并且推荐系统作为数据挖掘和机器学习的重要应用之一，同时推荐系统往更大的领域靠拢的话也属于人工智能的范畴，因此很多做推荐的学者把目光也瞄向了数据挖掘、机器学习和人工智能方面的会议。所以，如果想关注推荐系统的前沿，我们需要不仅关注推荐系统年会，还需要关注其他与推荐挂钩的会议。</p><p>1、与推荐系统直接相关的会议</p><p><a href="https://recsys.acm.org/" target="_blank" rel="noopener">RecSys -The ACM Conference Series on Recommender Systems.</a></p><p>2、数据挖掘相关的会议</p><p><a href="http://www.kdd.org/" target="_blank" rel="noopener">SIGKDD - The ACM SIGKDD Conference on Knowledge Discovery and Data Mining.</a></p><p><a href="http://www.wsdm-conference.org/" target="_blank" rel="noopener">WSDM - The International Conference on Web Search and Data Mining.</a></p><p><a href="http://cs.uvm.edu/~icdm/" target="_blank" rel="noopener">ICDM - The IEEE International Conference on Data Mining.</a></p><p><a href="https://www.siam.org/conferences/CM/Main/sdm19" target="_blank" rel="noopener">SDM -TheSIAM International Conference on Data Mining.</a></p><p>3、机器学习相关的会议</p><p><a href="https://icml.cc/" target="_blank" rel="noopener">ICML - The International Conference on Machine Learning.</a></p><p><a href="https://nips.cc/" target="_blank" rel="noopener">NIPS - The Conference on Neural Information Processing Systems</a></p><p>4、信息检索相关的会议</p><p><a href="http://sigir.org/" target="_blank" rel="noopener">SIGIR - The ACM International Conference on Research and Development in Information Retrieval</a></p><p>5、数据库相关的会议</p><p><a href="http://www.cikm2018.units.it/" target="_blank" rel="noopener">CIKM - The ACM International Conference on Information and Knowledge Management.</a></p><p>6、Web相关的会议</p><p><a href="https://www2018.thewebconf.org/" target="_blank" rel="noopener">WWW - The International World Wide Web Conference.</a></p><p>7、人工智能相关的会议</p><p><a href="https://aaai.org/Conferences/AAAI-18/" target="_blank" rel="noopener">AAAI - The National Conference of the American Association for Artificial Intelligence.</a></p><p><a href="http://www.ijcai.org/" target="_blank" rel="noopener">IJCAI - The International Joint Conference on Artificial Intelligence.</a></p><h3 id="相关学者"><a href="#相关学者" class="headerlink" title="相关学者"></a>相关学者</h3><p>Yehuda Koren<br>个人主页：Koren’s HomePage</p><p>主要贡献：Netflix Prize的冠军队成员，是推荐系统领域的大神级人物，曾就职雅虎，现就职于谷歌</p><p>代表文献：Matrix Factorization Techniques For Recommender Systems</p><p>Hao Ma<br>个人主页：<a href="https://www.haoma.io/" target="_blank" rel="noopener">HaoMa’s HomePage</a></p><p>主要贡献：社会化推荐领域的大牛，提出了许多基于社会化推荐的有效算法，现就职于微软</p><p>代表文献：SoRec: Social Recommendation Using Probabilistic Matrix Factorization</p><p>Julian McAuley<br>个人主页：<a href="http://cseweb.ucsd.edu/~jmcauley/" target="_blank" rel="noopener">McAuley</a></p><p>主要贡献：研究方向为社交网络、数据挖掘、推荐系统，现为加利福尼亚大学圣迭戈分校助理教授</p><p>代表文献：Leveraging social connections to improve personalized ranking for collaborative filtering</p><p>郭贵冰<br>个人主页：<a href="https://www.librec.net/luckymoon.me/" target="_blank" rel="noopener">Guibing Guo’s HomePage</a></p><p>主要贡献：国内推荐系统大牛，创办了推荐系统开源项目LibRec</p><p>代表文献：TrustSVD: Collaborative Filtering with Both the Explicit and Implicit Influence of User Trust and of Item Ratings</p><p>Hao Wang<br>个人主页：<a href="http://www.wanghao.in/" target="_blank" rel="noopener">HaoWang’s HomePage</a></p><p>主要贡献：擅长运用深度学习技术提高推荐系统性能</p><p>代表文献：Collaborative deep learning for recommender systems</p><p>何向南<br>个人主页：<a href="http://www.comp.nus.edu.sg/~xiangnan/" target="_blank" rel="noopener">Xiangnan He’s Homepage</a></p><p>主要贡献：运用深度学习技术提高推荐系统性能</p><p>代表文献：Neural Collaborative Filtering</p><p>Robin Burke<br>个人主页：<a href="http://josquin.cti.depaul.edu/~rburke/" target="_blank" rel="noopener">rburke’s HomePage</a></p><p>主要贡献：混合推荐方向的大牛</p><p>代表文献：Hybrid recommender systems: Survey and experiments</p><p>项亮<br>主要贡献：国内推荐系统领域中理论与实践并重的专家，Netflix Prize第二名</p><p>代表文献：《推荐系统实践》。</p><p>石川<br>个人主页：<a href="http://www.shichuan.org/" target="_blank" rel="noopener">shichuan’s HomePage</a></p><p>主要贡献：研究方向为异质信息网络上的推荐，提出了加权的异质信息相似度计算等</p><p>代表文献：Semantic Path based Personalized Recommendation on Weighted Heterogeneous Information Networks</p><h3 id="相关论文"><a href="#相关论文" class="headerlink" title="相关论文"></a>相关论文</h3><p><a href="https://github.com/hongleizhang/RSPapers" target="_blank" rel="noopener">RSPapers</a><br>最近和几个同学共同整理了关于推荐系统的一些经典必读论文，包括综述文章、传统经典推荐文章、社会化推荐文章、基于深度学习的推荐系统文章以及专门用于解决冷启动问题的文章等。该项目还在持续更新中，欢迎大家star，欢迎大家补充，让我们一起构建一个完整的入门推荐论文清单，让想入门推荐的童鞋们不必再想咱们一样痛苦吧。</p><h3 id="相关课程"><a href="#相关课程" class="headerlink" title="相关课程"></a>相关课程</h3><p><a href="https://www.coursera.org/specializations/recommender-systems" target="_blank" rel="noopener">Recommender Systems Specialization</a><br>最近，coursea上开放了推荐系统专项课程《Recommender Systems Specialization》。</p><p>该课程于2018年3月26日开课，这个系列由4门子课程和1门毕业项目课程组成，包括推荐系统导论，最近邻协同过滤，推荐系统评价，矩阵分解和高级技术等，感兴趣的同学可以关注。</p><h3 id="关于数据集"><a href="#关于数据集" class="headerlink" title="关于数据集"></a>关于数据集</h3><p>1、MovieLens</p><p>适用于传统的推荐任务，提供了3种不同规模的数据，包含用户对电影的评分信息，用户的人口统计学特征以及电影的描述特征。</p><p>2、Filmtrust</p><p>适用于社会化推荐任务，规模较小，包含用户对电影的评分信息，同时包含用户间的信任社交信息。</p><p>3、Douban</p><p>适用于社会化推荐任务，规模适中，包含用户对电影的评分信息，同时包含用户间的信任社交信息。</p><p>4、Epinions</p><p>适用于社会化推荐任务，规模较大，包含用户对电影的评分信息，同时包含用户间的信任社交信息，值得注意的是，该数据集同时还包括不信任关系信息。</p><p>5、Yelp</p><p>几乎适用于所有推荐任务，数据规模大，需要手动提取自己需要的信息，包含评价评分信息，用户信息（注册信息、粉丝数量、朋友信息），商品信息（属性信息、位置信息、图像信息），建议信息等。</p><h3 id="综述类"><a href="#综述类" class="headerlink" title="综述类:"></a>综述类:</h3><p>1、Towards theNext Generation of Recommender Systems: A Survey of the State-of-the-Art andPossible Extensions。最经典的推荐算法综述<br>2、Collaborative Filtering Recommender Systems. JB Schafer 关于协同过滤最经典的综述<br>3、Hybrid Recommender Systems: Survey and Experiments<br>4、项亮的博士论文《动态推荐系统关键技术研究》<br>5、个性化推荐系统的研究进展.周涛等<br>6、Recommender systems L Lü, M Medo, CH Yeung, YC Zhang, ZK Zhang, T ZhouPhysics Reports 519 (1), 1-49  （<a href="https://arxiv.org/abs/1202.1112）" target="_blank" rel="noopener">https://arxiv.org/abs/1202.1112）</a></p><ol start="7"><li>个性化推荐系统评价方法综述.周涛等</li></ol><p>协同过滤：<br>1.matrix factorization techniques for recommender systems. Y Koren<br>2.Using collaborative filtering to weave an information Tapestry. David Goldberg （协同过滤第一次被提出）<br>3.Item-Based Collaborative Filtering Recommendation Algorithms. Badrul Sarwar , George Karypis, Joseph Konstan .etl<br>4.Application of Dimensionality Reduction in Recommender System – A Case Study. Badrul M. Sarwar, George Karypis, Joseph A. Konstan etl<br>5.Probabilistic Memory-Based Collaborative Filtering. Kai Yu, Anton Schwaighofer, Volker Tresp, Xiaowei Xu,and Hans-Peter Kriegel<br>6.Recommendation systems:a probabilistic analysis. Ravi Kumar Prabhakar Raghavan.etl<br>7.Amazon.com recommendations: item-to-item collaborative filtering. Greg Linden, Brent Smith, and Jeremy York<br>8.Evaluation of Item-Based Top- N Recommendation Algorithms. George Karypis<br>9.Probabilistic Matrix Factorization. Ruslan Salakhutdinov<br>10.Tensor Decompositions,Alternating Least Squares and other Tales. Pierre Comon, Xavier Luciani, André De Almeida</p><p>基于内容的推荐：<br>1.Content-Based Recommendation Systems. Michael J. Pazzani and Daniel Billsus</p><p>基于标签的推荐：<br>1.Tag-Aware Recommender Systems: A State-of-the-Art Survey. Zi-Ke Zhang(张子柯), Tao Zhou(周 涛), and Yi-Cheng Zhang(张翼成)</p><p>推荐评估指标：<br>1、推荐系统评价指标综述. 朱郁筱，吕琳媛<br>2、Accurate is not always good：How Accuacy Metrics have hurt Recommender Systems<br>3、Evaluating Recommendation Systems. Guy Shani and Asela Gunawardana<br>4、Evaluating Collaborative Filtering Recommender Systems. JL Herlocker</p><p>推荐多样性和新颖性：</p><ol><li>Improving recommendation lists through topic diversification. Cai-Nicolas ZieglerSean M. McNee, Joseph A.Konstan,Georg Lausen</li><li>Fusion-based Recommender System for Improving Serendipity</li><li>Maximizing Aggregate Recommendation Diversity：A Graph-Theoretic Approach</li><li>The Oblivion Problem：Exploiting forgotten items to improve Recommendation diversity</li><li>A Framework for Recommending Collections</li><li>Improving Recommendation Diversity. Keith Bradley and Barry Smyth</li></ol><p>推荐系统中的隐私性保护：<br>1、Collaborative Filtering with Privacy. John Canny<br>2、Do You Trust Your Recommendations? An Exploration Of Security and Privacy Issues in Recommender Systems. Shyong K “Tony” Lam, Dan Frankowski, and John Ried.<br>3、Privacy-Enhanced Personalization. Alfred Kobsa.etl<br>4、Differentially Private Recommender Systems：Building Privacy into theNetflix Prize Contenders. Frank McSherry and Ilya Mironov Microsoft Research,Silicon Valley Campus<br>5、When being Weak is Brave: Privacy Issues in Recommender Systems. Naren Ramakrishnan, Benjamin J. Keller,and Batul J. Mirza</p><p>推荐冷启动问题：<br>1.Tied Boltzmann Machines for Cold Start Recommendations. Asela Gunawardana.etl<br>2.Pairwise Preference Regression for Cold-start Recommendation. Seung-Taek Park, Wei Chu<br>3.Addressing Cold-Start Problem in Recommendation Systems. Xuan Nhat Lam.etl<br>4.Methods and Metrics for Cold-Start Recommendations. Andrew I. Schein, Alexandrin P opescul, Lyle H. U ngar</p><p>bandit(老虎机算法,可缓解冷启动问题):<br>1、Bandits and Recommender Systems. Jeremie Mary, Romaric Gaudel, Philippe Preux<br>2、Multi-Armed Bandit Algorithms and Empirical Evaluation</p><p>基于社交网络的推荐：</p><ol><li>Social Recommender Systems. Ido Guy and David Carmel</li><li>A Social Networ k-Based Recommender System(SNRS). Jianming He and Wesley W. Chu</li><li>Measurement and Analysis of Online Social Networks.</li><li>Referral Web：combining social networks and collaborative filtering</li></ol><p>基于知识的推荐：<br>1、Knowledge-based recommender systems. Robin Burke<br>2、Case-Based Recommendation. Barry Smyth<br>3、Constraint-based Recommender Systems: Technologies and Research Issues. A. Felfernig. R. Burke</p><p>其他：<br>Trust-aware Recommender Systems. Paolo Massa and Paolo Avesani</p><p>Reinforcement Learning based Recommender System using Biclustering Technique<br>@Ttssxuan 推荐</p><p>#Reinforcement Learning</p><p>本文使用强化学习进行推荐，并借助 biclustering 减少状态和动作空间，优化效率和效果。</p><p>论文链接</p><p><a href="https://www.paperweekly.site/papers/1571" target="_blank" rel="noopener">https://www.paperweekly.site/papers/1571</a></p><p>Learning Continuous User Representations through Hybrid Filtering with doc2vec<br>@Ttssxuan 推荐</p><p>#doc2vec</p><p>本文将用行为使用 item 描述进行串连，构成文档，并使用 doc2vec 训练用户表示向量。</p><p>论文链接</p><p><a href="https://www.paperweekly.site/papers/1562" target="_blank" rel="noopener">https://www.paperweekly.site/papers/1562</a></p><p>Deep Reinforcement Learning for List-wise Recommendations<br>@paperweekly 推荐</p><p>#Reinforcement Learning</p><p>本文将增强学习应用于推荐系统，构建了一个在线的 user-agent 交互模拟器，本文工作来自京东等。</p><p>论文链接</p><p><a href="https://www.paperweekly.site/papers/1472" target="_blank" rel="noopener">https://www.paperweekly.site/papers/1472</a></p><p>Leveraging Long and Short-term Information in Content-aware Movie Recommendation</p><p>@zhangjun 推荐</p><p>#Generative Adversarial Networks</p><p>本文提出了一种新颖的基于生成对抗网络的推荐系统，采用强化学习动态调整历史长期偏好和短期会话的模型，此外，还加入了封面图片特征进一步提升系统性能，最后在两个数据集上做到 state-of-art 的性能。</p><p>论文链接</p><p><a href="https://www.paperweekly.site/papers/1435" target="_blank" rel="noopener">https://www.paperweekly.site/papers/1435</a></p><p>Deep Collaborative Autoencoder for Recommender Systems: A Unified Framework for Explicit and Implicit Feedback<br>@zhangjun 推荐</p><p>#Autoencoder</p><p>本文给出了一个基于 Autoencoder 的推荐系统框架，同时兼顾显式反馈和隐式反馈。</p><p>论文链接</p><p><a href="https://www.paperweekly.site/papers/1432" target="_blank" rel="noopener">https://www.paperweekly.site/papers/1432</a></p><p>Use of Deep Learning in Modern Recommendation System: A Summary of Recent Works<br>@luosha865 推荐</p><p>#Deep Learning</p><p>论文总结了 2013 年以来，最近 33 篇深度学习应用于推荐系统领域的文章。按照内容相关，协同过滤，混合方法分别进行介绍，可以作为不错的索引。</p><p>论文链接</p><p><a href="https://www.paperweekly.site/papers/1417" target="_blank" rel="noopener">https://www.paperweekly.site/papers/1417</a></p><p>A Context-Aware User-Item Representation Learning for Item Recommendation<br>@paperweekly 推荐</p><p>#POI Recommendation</p><p>本文对用户评论与商品评论进行交互式建模，通过识别与用户和商品都相关的文本信息，提取用户商品联合特征，在 Amazon 五个打分预测数据集上均取得了优秀的性能。</p><p>论文链接</p><p><a href="https://www.paperweekly.site/papers/1585" target="_blank" rel="noopener">https://www.paperweekly.site/papers/1585</a></p><p>Pixie: A System for Recommending 3+ Billion Items to 200+ Million Users in Real-Time<br>@luosha865 推荐</p><p>#Recommender System</p><p>本文介绍了 Pinterest 的 Pixie 系统，主要针对他们开发的随机游走和剪枝算法，此外系统本身基于 Stanford Network Analysis Platform 实现。</p><p>论文链接</p><p><a href="https://www.paperweekly.site/papers/1437" target="_blank" rel="noopener">https://www.paperweekly.site/papers/1437</a></p><p>Recommender Systems with Random Walks: A Survey<br>@zhangjun 推荐</p><p>#Random Walks</p><p>本文是一篇综述文章，关于“随机游走”在推荐系统中的相关应用。</p><p>论文链接</p><p><a href="https://www.paperweekly.site/papers/1132" target="_blank" rel="noopener">https://www.paperweekly.site/papers/1132</a></p><p>Deep Learning Based Recommender System: a Survey and New Perspectives<br>@zhangjun 推荐</p><p>#Deep Learning</p><p>本文回顾了大部分推荐系统在深度学习上的方法，并对这些方法进行了宏观的整合。让我们了解了在推荐系统中，用深度学习的方法和传统方法相结合的多种方法，可以给我们带来一些新的启发。</p><p>论文链接</p><p><a href="https://www.paperweekly.site/papers/557" target="_blank" rel="noopener">https://www.paperweekly.site/papers/557</a></p><p>Auto-Encoding User Ratings via Knowledge Graphs in Recommendation Scenarios<br>@jojoe 推荐</p><p>#Recommender System</p><p>本文将电影与电影标签之间的映射关系应用到 AutoEncoder 的可见层和隐层的连接中，将用户对电影的打分情况作为训练数据，使得最后得到的降维表示具有解释性（用户对电影标签的偏好）。</p><p>论文链接</p><p><a href="https://www.paperweekly.site/papers/1256" target="_blank" rel="noopener">https://www.paperweekly.site/papers/1256</a></p><p>A Deep Multimodal Approach for Cold-start Music Recommendation<br>@jojoe 推荐</p><p>#Recommender System</p><p>本文结合音频和文本来进行歌曲推荐，只要给定一首歌就可以进行相关推荐，非常实用。</p>]]></content>
      
      
      <categories>
          
          <category> Recommender System </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Technology </tag>
            
            <tag> Recommender </tag>
            
            <tag> study resource </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>〆 个性化推荐系统开源项目一览</title>
      <link href="/2018/06/25/openSourceOnRecommonderSys/"/>
      <url>/2018/06/25/openSourceOnRecommonderSys/</url>
      
        <content type="html"><![CDATA[<p><strong><font color="#5A5AAD">I have found it worth living, and would gladly live it again if the chance were offered me. </font></strong></p><h2 id="Open-Source-Project-整理了关于目前市场上个性化推荐系统的一些开源项目。"><a href="#Open-Source-Project-整理了关于目前市场上个性化推荐系统的一些开源项目。" class="headerlink" title="Open Source Project: 整理了关于目前市场上个性化推荐系统的一些开源项目。"></a><font color="#FF5151">Open Source Project: </font>整理了关于目前市场上个性化推荐系统的一些开源项目。</h2><p><font style="color: #394F6A; font-size: 20px; font-family: '微软雅黑'">[主要语言] C++/java</font><br><a id="more"></a></p><h3 id="1-SVDFeature"><a href="#1-SVDFeature" class="headerlink" title="1.SVDFeature"></a>1.SVDFeature</h3><p>主页：<a href="http://apex.sjtu.edu.cn/projects/33" target="_blank" rel="noopener">SVDFeature - SVDFeature</a> 语言：C++<br>一个feature-based协同过滤和排序工具，由上海交大Apex实验室开发，代码质量较高。在KDD Cup 2012中获得第一名，KDD Cup 2011中获得第三名，相关论文 发表在2012的JMLR中，这足以说明它的高大上。SVDFeature包含一个很灵活的Matrix Factorization推荐框架，能方便的实现SVD、SVD++等方法, 是单模型推荐算法中精度最高的一种。SVDFeature代码精炼，可以用 相对较少的内存实现较大规模的单机版矩阵分解运算。另外含有Logistic regression的model，可以很方便的用来进行ensemble。</p><h3 id="2-LibMF"><a href="#2-LibMF" class="headerlink" title="2.LibMF"></a>2.LibMF</h3><p>主页：<a href="https://www.csie.ntu.edu.tw/~cjlin/libmf/" target="_blank" rel="noopener">LIBMF: A Software for Matrix Factorization for Recommender Systems</a> 语言：C++<br>作者Chih-JenLin来自大名鼎鼎的台湾国立大学，他们在机器学习领域享有盛名，近年连续多届KDD Cup竞赛上均 获得优异成绩，并曾连续多年获得冠军。台湾大学的风格非常务实，业界常用的LibSVM， Liblinear等都是他们开发的，开源代码的效率和质量都非常高。LibMF在矩阵分解的并行化方面作出了很好的贡献，针对SGD（随即梯度下降）优化方法在并行计算中存在的locking problem和memory discontinuity问题，提出了一种 矩阵分解的高效算法FPSGD（Fast Parallel SGD），根据计算节点的个数来划分评分矩阵block，并分配计算节点。系统介绍可以见这篇 论文（ACM Recsys 2013的 Best paper Award）。</p><h3 id="3-LibFM"><a href="#3-LibFM" class="headerlink" title="3.LibFM"></a>3.LibFM</h3><p>主页：<a href="http://www.libfm.org/" target="_blank" rel="noopener">libFM</a> 语言：C++<br>作者是德国Konstanz大学的Steffen Rendle，他用LibFM同时玩转KDD Cup 2012 Track1和Track2两个子竞赛单元，都取得了很好的成绩，说明LibFM是非常管用的利器。LibFM是专门用于矩阵分解的利器，尤其是其中实现了MCMC（Markov Chain Monte Carlo）优化算法，比常见的SGD优化方法精度要高，但运算速度要慢一些。当然LibFM中还 实现了SGD、SGDA（Adaptive SGD）、ALS（Alternating Least Squares）等算法。</p><h3 id="4-Lenskit"><a href="#4-Lenskit" class="headerlink" title="4.Lenskit"></a>4.Lenskit</h3><p>主页：<a href="http://lenskit.org/" target="_blank" rel="noopener">LensKit Recommender Toolkit</a> 语言Java<br>这个Java开发的开源推荐系统，来自美国的明尼苏达大学的GroupLens团队，也是推荐领域知名的测试数据集Movielens的作者。该源码托管在GitHub上，lenskit/lenskit · GitHub。主要包含lenskit-api,lenskit-core, lenskit-knn,lenskit-svd,lenskit-slopone,lenskit-parent,lenskit-data-structures,lenskit-eval,lenskit-test等模块，主要实现了k-NN，SVD，Slope-One等 典型的推荐系统算法。</p><h3 id="5-GraphLab"><a href="#5-GraphLab" class="headerlink" title="5.GraphLab"></a>5.GraphLab</h3><p>主页：<a href="https://turi.com/products/create/docs/index.html" target="_blank" rel="noopener">GraphLab - Collaborative Filtering</a> 语言：C++<br>Graphlab是基于C++开发的一个高性能分布式graph处理挖掘系统，特点是对迭代的并行计算处理能力强（这方面是hadoop的弱项），由于功能独到，GraphLab在业界名声很响。 用GraphLab来进行大数据量的random walk或graph-based的推荐算法非常有效。Graphlab虽然名气比较响亮（CMU开发），但是对一般数据量的应用来说可能还用不上。GraphLab主要实现了ALS，CCD++，SGD，Bias-SGD，SVD++，Weighted-ALS，Sparse-ALS，Non-negative Matrix Factorization，Restarted Lanczos Algorithm等算法。</p><h3 id="6-Mahout"><a href="#6-Mahout" class="headerlink" title="6.Mahout"></a>6.Mahout</h3><p>主页：<a href="http://mahout.apache.org/" target="_blank" rel="noopener">Apache Mahout: Scalable machine learning and data mining</a> 语言：Java<br>Mahout 是 Apache Software Foundation (ASF) 开发的一个全新的开源项目，其主要目标是创建一些可伸缩的机器学习算法，供开发人员在 Apache 在许可下免费 使用。Mahout项目是由 Apache Lucene社区中对机器学习感兴趣的一些成员发起的，他们希望建立一个可靠、文档翔实、可伸缩的项目，在其中实现一些常见的用于 聚类和分类的机器学习算法。该社区最初基于 Ngetal. 的文章 “Map-Reduce for Machine Learning on Multicore”，但此后在发展中又并入了更多广泛的机器学习 方法，包括Collaborative Filtering（CF），Dimensionality Reduction，Topic Models等。此外，通过使用 Apache Hadoop 库，Mahout 可以有效地扩展到云中。在Mahout的Recommendation类算法中，主要有User-Based CF，Item-Based CF，ALS，ALS on Implicit Feedback，Weighted MF，SVD++，Parallel SGD等。</p><h3 id="7-Myrrix"><a href="#7-Myrrix" class="headerlink" title="7.Myrrix"></a>7.Myrrix</h3><p>主页：<a href="http://myrrix.com/" target="_blank" rel="noopener">http://myrrix.com/</a> 语言：Java<br>Myrrix最初是Mahout的作者之一Sean Owen基于Mahout开发的一个试验性质的推荐系统。目前Myrrix已经是一个完整的、实时的、可扩展的集群和推荐系统，主要 架构分为两部分：服务层：在线服务，响应请求、数据读入、提供实时推荐；计算层：用于分布式离线计算，在后台使用分布式机器学习算法为服务层更新机器学习 模型。Myrrix使用这两个层构建了一个完整的推荐系统，服务层是一个HTTP服务器，能够接收更新，并在毫秒级别内计算出更新结果。服务层可以单独使用，无需 计算层，它会在本地运行机器学习算法。计算层也可以单独使用，其本质是一系列的Hadoop jobs。目前Myrrix以被 Cloudera 并入Oryx项目。</p><h3 id="8-EasyRec"><a href="#8-EasyRec" class="headerlink" title="8.EasyRec"></a>8.EasyRec</h3><p>主页：<a href="http://easyrec.org/" target="_blank" rel="noopener">easyrec :: open source recommendation engine</a> 语言：Java<br>EasyRec是一个易集成、易扩展、功能强大且具有可视化管理的推荐系统，更像一个完整的推荐产品，包括了数据录入模块、管理模块、推荐挖掘、离线分析等。 EasyRec可以同时给多个不同的网站提供推荐服务，通过tenant来区分不同的网站。架设EasyRec服务器，为网站申请tenant，通过tenant就可以很方便的集成到 网站中。通过各种不同的数据收集（view,buy.rating）API收集到网站的用户行为，EasyRec通过离线分析，就可以产生推荐信息，您的网站就可以通过 Recommendations和Community Rankings来进行推荐业务的实现。</p><h3 id="9-Waffles"><a href="#9-Waffles" class="headerlink" title="9.Waffles"></a>9.Waffles</h3><p>主页：<a href="http://waffles.sourceforge.net/" target="_blank" rel="noopener">http://waffles.sourceforge.net/</a> 语言：C++<br>Waffles英文原意是蜂蜜甜饼，在这里却指代一个非常强大的机器学习的开源工具包。Waffles里包含的算法特别多，涉及机器学习的方方面面，推荐系统位于 其中的Waffles_recommend tool，大概只占整个Waffles的1/10的内容，其它还有分类、聚类、采样、降维、数据可视化、音频处理等许许多多工具包，估计 能与之媲美的也就数Weka了。</p><h3 id="10-RapidMiner"><a href="#10-RapidMiner" class="headerlink" title="10.RapidMiner"></a>10.RapidMiner</h3><p>主页：<a href="https://rapidminer.com/" target="_blank" rel="noopener">Predictive Analytics, Data Mining, Self-service, Open source</a> 语言：Java<br>RapidMiner（前身是Yale）是一个比较成熟的数据挖掘解决方案，包括常见的机器学习、NLP、推荐、预测等方法（推荐只占其中很小一部分），而且带有GUI的 数据分析环境，数据ETL、预处理、可视化、评估、部署等整套系统都有。另外RapidMiner提供commercial license，提供R语言接口，感觉在向着一个商用的 数据挖掘公司的方向在前进。</p><h3 id="11-surpriselib"><a href="#11-surpriselib" class="headerlink" title="11.surpriselib"></a>11.surpriselib</h3><p>主页：<a href="http://surpriselib.com/" target="_blank" rel="noopener">surpriselib</a> 语言：Python<br>Surprise is a Python scikit building and analyzing recommender systems.<br>Surprise was designed with the following purposes in mind:</p><blockquote><p>Give users perfect control over their experiments. To this end, a strong emphasis is laid on documentation, which we have tried to make as clear and precise as possible by pointing out every detail of the algorithms.<br>Alleviate the pain of Dataset handling. Users can use both built-in datasets (Movielens, Jester), and their own custom datasets.<br>Provide various ready-to-use prediction algorithms such as baseline algorithms, neighborhood methods, matrix factorization-based ( SVD, PMF, SVD++, NMF), and many others. Also, various similarity measures (cosine, MSD, pearson…) are built-in.<br>Make it easy to implement new algorithm ideas.<br>Provide tools to evaluate, analyse and compare the algorithms performance. Cross-validation procedures can be run very easily using powerful CV iterators (inspired by scikit-learn excellent tools), as well as exhaustive search over a set of parameters.</p></blockquote><h3 id="12-LibRec"><a href="#12-LibRec" class="headerlink" title="12 LibRec"></a>12 LibRec</h3><p>主页：<a href="https://github.com/guoguibing/librec" target="_blank" rel="noopener">LibRec</a>国内推荐系统大牛，创办了推荐系统开源项目LibRec。java版本开源推荐系统，包含了70多种经典的推荐算法。</p><h3 id="13-Recommender-System"><a href="#13-Recommender-System" class="headerlink" title="13 Recommender-System"></a>13 Recommender-System</h3><p>python版本开源推荐系统，包含了多种经典的推荐算法。</p><h3 id="14-Neural-Collaborative-Filtering"><a href="#14-Neural-Collaborative-Filtering" class="headerlink" title="14 Neural Collaborative Filtering"></a>14 Neural Collaborative Filtering</h3><p>python实现神经协同过滤推荐算法。</p>]]></content>
      
      
      <categories>
          
          <category> Recommender System </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Technology </tag>
            
            <tag> Recommender </tag>
            
            <tag> Open Source Project </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>〆 Recommender System Handdbook</title>
      <link href="/2018/06/12/recommender/"/>
      <url>/2018/06/12/recommender/</url>
      
        <content type="html"><![CDATA[<p><strong><font color="#5A5AAD">⚠  Do not let your dream be dream.   </font></strong></p><h2 id="Preface-Just-study-from-now-on"><a href="#Preface-Just-study-from-now-on" class="headerlink" title="Preface: Just study from now on."></a><font color="#FF5151">Preface: </font>Just study from now on.</h2><a id="more"></a><h2 id="Vocabulary-词汇表"><a href="#Vocabulary-词汇表" class="headerlink" title="Vocabulary 词汇表"></a>Vocabulary 词汇表</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br></pre></td><td class="code"><pre><span class="line">word    phonogram   definition/translate</span><br><span class="line">vocabulary  [və(ʊ)&apos;kæbjʊlərɪ]   词汇，词表，词汇量，字汇</span><br><span class="line">recommend   [rekə&apos;mend] 推荐，介绍，劝告，使受欢迎，托付，建议</span><br><span class="line">handbook    [&apos;hæn(d)bʊk]    手册，指南</span><br><span class="line">arithmetic  [ə&apos;rɪθmətɪk]    算法，算术，运算，四则运算</span><br><span class="line">various [&apos;veərɪəs]  各种各样的，多方面的</span><br><span class="line">migration   [maɪ&apos;greɪʃ(ə)n] 迁移，移民，移动，移行</span><br><span class="line">delicate    [&apos;delɪkət]  微妙的，精美的，雅致的，柔和的，娇弱的，精巧的</span><br><span class="line">dedicate    [&apos;dedɪkeɪt] 致力，献身，题献，做贡献</span><br><span class="line">prove   [pruːv] 证明，检验，显示，证明是，证实，显示出</span><br><span class="line">cope    [kəʊp]  处理，对付，竞争，长袍，应付</span><br><span class="line">overload    [əʊvə&apos;ləʊd] 超载，超过负荷，负荷过大，重载</span><br><span class="line">electronic  [ɪˌlekˈtrɒnɪk]  电子的，电子电路，电子器材，电子化，电子商务</span><br><span class="line">commerce    [&apos;kɒmɜːs]   贸易，商业，商务</span><br><span class="line">corresponding   [,kɒrɪ&apos;spɒndɪŋ] 相当的，相应的，一致的，通信的，相配，类似</span><br><span class="line">propose [prə&apos;pəʊz]  建议，打算，计划，求婚，提出</span><br><span class="line">generation  [dʒenə&apos;reɪʃ(ə)n]    一代，产生，一代人，生殖</span><br><span class="line">deploy  [dɪ&apos;plɒɪ]   配置，展开，使疏开，部署</span><br><span class="line">commercial  [kə&apos;mɜːʃ(ə)l]   商业的，营利的，靠广告收入的，商业广告的</span><br><span class="line">disciplinary    [&apos;dɪsɪplɪn(ə)rɪ; ,dɪsɪ&apos;plɪn-]   规律的，训练的，训诫的，多学科的，纪律的，惩戒性的</span><br><span class="line">multi   [&apos;mʌltɪ]    多，多用，多向</span><br><span class="line">involve [ɪn&apos;vɒlv]   包含，牵涉，使陷于，潜心于，使卷入</span><br><span class="line">expert  [&apos;ekspɜːt]  熟练的，内行的，老练的，专家，行家，能手</span><br><span class="line">intelligence    [ɪn&apos;telɪdʒ(ə)ns]    智力，情报工作，情报机关，智慧，智能，天分</span><br><span class="line">interaction [ɪntər&apos;ækʃ(ə)n] 相互作用，交互作用，互动，交互</span><br><span class="line">research    [rɪ&apos;sɜːtʃ; &apos;riːsɜːtʃ]   研究，调查，科研，产品研发</span><br><span class="line">practitioner    [præk&apos;tɪʃ(ə)nə] 开业者，从业者，实践者，实际工作者</span><br><span class="line">impose  [ɪm&apos;pəʊz]   利用，欺骗，施加影响，征税</span><br><span class="line">diversity   [daɪ&apos;vɜːsɪtɪ; dɪ-]  多样性，差异，多元化</span><br><span class="line">present [prɪˈzent;(for n.)ˈpreznt]  提出，介绍，呈现，赠送，现在的，出席的，礼物，瞄准，目前的</span><br><span class="line">coherent    [kə(ʊ)&apos;hɪər(ə)nt]   连贯的，一致的，明了的，清晰的，凝聚性的，互相耦合的，黏在一起的</span><br><span class="line">unified [&apos;ju:nifaid]    统一的，一致标准的，统一，使一致，齐一</span><br><span class="line">concept [&apos;kɒnsept]  观念，概念，思想，理念</span><br><span class="line">methodology [meθə&apos;dɒlədʒɪ]  方法论，方法学，研究方法，方法</span><br><span class="line">trend   [trend] 趋势，倾向，走向，使…趋向</span><br><span class="line">challenge   [&apos;tʃælɪn(d)ʒ]   挑战，怀疑，向…挑战，对…质疑，擂台</span><br><span class="line">comprehensive   [kɒmprɪ&apos;hensɪv] 综合的，广泛的，有理解力的，综合学校，全面</span><br><span class="line">entirely    [ɪn&apos;taɪəlɪ; en-]    完全地，彻底地，尽然</span><br><span class="line">informative [ɪn&apos;fɔːmətɪv]   教育性的，有益的，情报的，见闻广博的</span><br><span class="line">factual [&apos;fæktʃʊəl; -tjʊəl] 事实的，真实的，实际的，实事求是，实际频率</span><br><span class="line">concise [kən&apos;saɪs]  简明的，简洁的，简练的</span><br><span class="line">convenient  [kən&apos;viːnɪənt]  方便，便利的，便捷，方便快捷</span><br><span class="line">reference   [&apos;ref(ə)r(ə)ns] 参考，参照，涉及，提及，参考书目，引用</span><br><span class="line">novel   [&apos;nɒv(ə)l]  新奇的，异常的，小说，新颖的</span><br><span class="line">approach    [ə&apos;prəʊtʃ]  方法，途径，接近，着手处理，靠近</span><br><span class="line">consist [kən&apos;sɪst]  由…组成，在于，符合，组成存在</span><br><span class="line">evaluation  [ɪˌvæljuˈeɪʃn]  评价，评估，估价，求值，评测</span><br><span class="line">community   [kəˈmju:nətɪ]   社区，群落，共同体，团体</span><br><span class="line">fundamental [fʌndə&apos;ment(ə)l]    基本的，根本的，基本原理，基本原则，根本性</span><br><span class="line">nowadays    [&apos;naʊədeɪz] 时下，现今，当今，如今</span><br><span class="line">collaborative   [kə&apos;læbəretɪv]  合作的，协作的，协同，协作型</span><br><span class="line">content-aware       情境感知，上下文感知</span><br><span class="line">survey  [ˈsəːveɪ; (for v.) səˈveɪ]  调查，测量，审视，纵览，勘测</span><br><span class="line">deal    [diːl]  处理，给予，分配，发牌，讨论，交易，做生意</span><br><span class="line">consideration   [kənsɪdə&apos;reɪʃ(ə)n]  考虑，原因，关心，报仇，代价</span><br><span class="line">guideline   [&apos;gaɪdlaɪn] 指导方针，参考，指南，准则</span><br><span class="line">aspect  [&apos;æspekt]   方面，方向，形式，外貌</span><br><span class="line">pracical    [&apos;præktɪk(ə)l]  实际的，实用性的，踏实，实事</span><br><span class="line">section [&apos;sekʃ(ə)n] 截面，部分，部门，地区，章节，把…分段，将…切片</span><br><span class="line">discuss [dɪ&apos;skʌs]   讨论，论述，辩论，商量</span><br><span class="line">relate  [rɪ&apos;leɪt]   叙述，使…有联系，涉及，认同，有关，关联</span><br><span class="line">visualization   [,vɪzjʊəlaɪ&apos;zeɪʃən] 形象化，清楚地呈现在心，视觉化</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Book Notes </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Technology </tag>
            
            <tag> Recommender Arithmetic </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>〆 Gradle One</title>
      <link href="/2018/01/19/gradleOne/"/>
      <url>/2018/01/19/gradleOne/</url>
      
        <content type="html"><![CDATA[<p><strong><font color="#5A5AAD">⚠  Gradle   </font></strong></p><h2 id="how-to-install-gradle"><a href="#how-to-install-gradle" class="headerlink" title="how to install gradle"></a>how to install gradle</h2><p><strong>gradle runs on all major operating system and requires only a java jdk or jre version 7 or higher to be installed.</strong></p><a id="more"></a><h3 id="install-manually"><a href="#install-manually" class="headerlink" title="install manually"></a>install manually</h3><ul><li>download the lastest gradle distribution</li><li><p>unpack the distribution</p><p>  $ mkdir /opt/gradle<br>  $ unzip -d /opt/gradle gradle-4.4.1-bin.zip<br>  $ ls /opt/gradle/gradle-4.4.1<br>  LICENSE  NOTICE  bin  getting-started.html  init.d  lib  media</p></li><li><p>configure system environment</p><p>  $ export PATH=$PATH:/opt/gradle/gradle-4.4.1/bin</p></li></ul><h3 id="extend-upgrade-with-the-gradle-wrapper"><a href="#extend-upgrade-with-the-gradle-wrapper" class="headerlink" title="extend: upgrade with the gradle wrapper"></a>extend: upgrade with the gradle wrapper</h3><p>If your existing Gradle-based build uses the Gradle Wrapper, you can easily upgrade by running the wrapper task, specifying the desired Gradle version:</p><p>$ ./gradlew wrapper –gradle-version=4.4.1 –distribution-type=bin<br>Note that it is not necessary for Gradle to be installed to use the Gradle wrapper. The next invocation of gradlew or gradlew.bat will download and cache the specified version of Gradle.</p><p>$ ./gradlew tasks<br>Downloading <a href="https://services.gradle.org/distributions/gradle-4.4.1-bin.zip" target="_blank" rel="noopener">https://services.gradle.org/distributions/gradle-4.4.1-bin.zip</a><br>…</p><h2 id="get-start"><a href="#get-start" class="headerlink" title="get start"></a>get start</h2><h3 id="creating-build-Scans"><a href="#creating-build-Scans" class="headerlink" title="creating build Scans"></a>creating build Scans</h3><p>gradle build –scan</p><p>Create different kinds of build scans by locally modifying this quickstart project. Here are some ideas:</p><p>Edit src/main/java/example/Example.java to introduce compile errors<br>Edit src/test/java/example/ExampleTest.java to introduce test failures<br>Add more dependencies, more plugins, and more projects<br>Alternatively, enable one of your own builds to produce build scans by following the step-by-step instructions</p><h3 id="creating-new-gradle-builds"><a href="#creating-new-gradle-builds" class="headerlink" title="creating new gradle builds"></a>creating new gradle builds</h3><p>$ mkdir basic-demo<br>$ cd basic-demo<br>$ touch build.gradle</p><p>$ gradle tasks</p><p><strong>Details about the wrapper task can be seen through the help task.</strong></p><p>$ gradle help –task wrapper</p><p>.<br>├── build.gradle<br>├── gradle<br>│   └── wrapper<br>│       ├── gradle-wrapper.jar<br>│       └── gradle-wrapper.properties<br>├── gradlew    <strong>1</strong><br>└── gradlew.bat    <strong>2</strong></p><p><strong>1</strong> Wrapper script for Unix-based systems<br><strong>2</strong> Wrapper script for Windows</p><p>// 查看gradle编译属性<br>$ ./gradlew properties</p><p>// 分别对应属性里的描述，版本信息<br>description = ‘A trivial Gradle build’<br>version = ‘1.0’</p><p>// 查看所有gradle原生和自定义任务<br>$ ./gradlew tasks –all</p><p>如: build.gradle 增加 task(功能为复制src文件的内容到文件dest–dest文件夹可以不存在&lt;自动生成&gt;)<br>task copy(type: Copy) {<br>    from ‘src’<br>    into ‘dest’<br>}</p><p>// 执行gradle 任务<br>$ ./gradlew copy</p><h3 id="创建不同的项目，不同的task可能需要不同的plugin和dependence"><a href="#创建不同的项目，不同的task可能需要不同的plugin和dependence" class="headerlink" title="创建不同的项目，不同的task可能需要不同的plugin和dependence"></a>创建不同的项目，不同的task可能需要不同的plugin和dependence</h3><p>for exam: 压缩文件 zip 任务, 需要gradle 的 base plugin</p><p>plugins {<br>    id ‘base’<br>}</p><p>task zip(type: Zip) {<br>    from ‘src’<br>}</p><p>切记： plugins {} 必须在build.gradle 的最前面，top！ windows里 ./gradlew 可以用 gradle 替换</p><h2 id="building-java-applications"><a href="#building-java-applications" class="headerlink" title="building java applications"></a>building java applications</h2><p><a href="https://docs.gradle.org/current/userguide/build_init_plugin.html?_ga=2.176129574.526839806.1516845457-121663520.1516845457" target="_blank" rel="noopener">More init plugin</a></p><h4 id="gradle-init-–type"><a href="#gradle-init-–type" class="headerlink" title="$ gradle init –type "></a>$ gradle init –type <name></name></h4><pre><code>If a --type parameter is not supplied, Gradle will attempt to infer the type from the environment. For example, it will infer a type value of “pom” if it finds a pom.xml to convert to a Gradle build.If the type could not be inferred, the type “basic” will be used.</code></pre><p>type 属性的 name 常见的有以下几种：</p><ul><li>java-application</li><li>java-library</li><li>scala-library</li><li>groovy-library</li><li>basic</li></ul><p>执行：<br>$ gradle init –type java-application</p><p>├── build.gradle<br>├── gradle    <strong>1</strong><br>│   └── wrapper<br>│       ├── gradle-wrapper.jar<br>│       └── gradle-wrapper.properties<br>├── gradlew<br>├── gradlew.bat<br>├── settings.gradle<br>└── src<br>    ├── main      <strong>2</strong><br>    │   └── java<br>    │       └── App.java<br>    └── test      <strong>3</strong><br>        └── java<br>            └── AppTest.java</p><p><strong>1</strong> Generated folder for wrapper files<br><strong>2</strong> Default Java source folder<br><strong>3</strong> Default Java test folder</p><p>其中 build.gradle 文件如下:</p><p>apply plugin: ‘java’<br>apply plugin: ‘application’</p><p>repositories {<br>    jcenter()  <strong>1</strong><br>}</p><p>dependencies {<br>    compile ‘com.google.guava:guava:21.0’  <strong>2</strong><br>    testCompile ‘junit:junit:4.12’         <strong>3</strong><br>}</p><p>mainClassName = ‘App’  <strong>4</strong></p><p><strong>1</strong> public Bintray Artifactory repository<br><strong>2</strong> Google Guava library<br><strong>3</strong> JUnit testing library<br><strong>4</strong> Class with “main” method (used by Application plugin)</p><blockquote><p>$ ./gradlew tasks</p><blockquote><blockquote><p>use the tasks task to see what task has been added by the plugin.<br>$ ./gradlew run<br>The run task tells Gradle to execute the main method in the class assigned to the mainClassName property.</p></blockquote></blockquote></blockquote><h3 id="编译创建javaweb项目"><a href="#编译创建javaweb项目" class="headerlink" title="编译创建javaweb项目"></a>编译创建javaweb项目</h3><h4 id="创建如下的格式"><a href="#创建如下的格式" class="headerlink" title="创建如下的格式"></a>创建如下的格式</h4><p>webdemo/<br>    src/<br>        main/<br>            java/<br>            webapp/<br>        test<br>            java/</p><h4 id="创建build-gradle文件，内容如下"><a href="#创建build-gradle文件，内容如下" class="headerlink" title="创建build.gradle文件，内容如下"></a>创建build.gradle文件，内容如下</h4><p>plugins {<br>    id ‘java’<br>    id ‘war’<br>}</p><p>repositories {<br>    jcenter()<br>}</p><p>dependencies {<br>    providedCompile ‘javax.servlet:javax.servlet-api:3.1.0’<br>    testCompile ‘junit:junit:4.12’<br>}</p><h4 id="gradle-wrapper-–gradle-version-4-5"><a href="#gradle-wrapper-–gradle-version-4-5" class="headerlink" title="$ gradle wrapper –gradle-version=4.5"></a>$ gradle wrapper –gradle-version=4.5</h4><p>指定gradle版本进行编译</p><h4 id="增加-gretty-plugin"><a href="#增加-gretty-plugin" class="headerlink" title="增加 gretty plugin"></a>增加 gretty plugin</h4><p>plugins {<br>    id ‘java’<br>    id ‘war’<br>    id ‘org.akhikhl.gretty’ version ‘1.4.2’<br>}</p><p>执行指令</p><p>$ ./gradlew appRun</p>]]></content>
      
      
      <categories>
          
          <category> Book Notes </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Technology </tag>
            
            <tag> Gradle Java </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>〆 linux 磁盘分区</title>
      <link href="/2018/01/18/linuxSetup/"/>
      <url>/2018/01/18/linuxSetup/</url>
      
        <content type="html"><![CDATA[<p><strong><font color="#5A5AAD">⚠  应用卷机制安装debian系统，并进行分区    </font></strong></p><h2 id="知识点-linux系统的磁盘分区规则，以及逻辑卷的使用规则"><a href="#知识点-linux系统的磁盘分区规则，以及逻辑卷的使用规则" class="headerlink" title="知识点: linux系统的磁盘分区规则，以及逻辑卷的使用规则"></a><font color="#FF5151">知识点: </font>linux系统的磁盘分区规则，以及逻辑卷的使用规则</h2><p><font style="color: #394F6A; font-size: 20px; font-family: '微软雅黑'">[例如] 不同的分区采用何种方式的文件格式–xfs、ext4(主流)</font><br><a id="more"></a></p><h2 id="基本的linux系统路径挂载点"><a href="#基本的linux系统路径挂载点" class="headerlink" title="基本的linux系统路径挂载点"></a>基本的linux系统路径挂载点</h2><h3 id="英文解释"><a href="#英文解释" class="headerlink" title="英文解释"></a>英文解释</h3><blockquote><p>/ - the root file system<br>/boot - static files of the boot loader<br>/home - user home directories<br>/tmp - temporary files<br>/usr - static data<br>/var - variable data<br>/srv - data for services provided by this system<br>/opt - add-on application software packages<br>/usr/local - local hierarchy<br>swap area<br>reserved bios boot area<br>efi system partition<br>pyysical volume<br>…</p></blockquote><h3 id="中文解释"><a href="#中文解释" class="headerlink" title="中文解释"></a>中文解释</h3><blockquote><p>/ - 根分区 200G<br>/boot - 存放启动系统使用的静态文件 24G main<br>/home - 用户宿主目录的父目录 80G<br>/tmp - 临时文件 20G<br>/var - 可变数据目录 100G<br>/usr - 应用软件存放位置 100G<br>/srv - 系统服务目录 40G<br>/opt - 附加应用程序 100G<br>/usr/local - local hierarchy<br>swap area 交换分区 – 物理内存的2倍 16G<br>reserved bios boot area<br>efi system partition 20G main<br>pyysical volume<br>…</p></blockquote><p>###解析：</p><h4 id=""><a href="#" class="headerlink" title="/"></a>/</h4><p>所有未指定挂载点的目录都会放到这个挂载点下。</p><h4 id="home"><a href="#home" class="headerlink" title="/home"></a>/home</h4><p>一般每个用户100M左右，特殊用途，比如放大文件也可再加上G。分区大小取决于用户多少。对于多用户使用的电脑，建议把/home独立出来，而且还可以很好地控制普通用户权限等，比如对用户或者用户组实行磁盘配额限制、用户权限访问等。</p><h4 id="tmp"><a href="#tmp" class="headerlink" title="/tmp"></a>/tmp</h4><p>临时文件</p><p>一般设置1-5G，方便加载ISO镜像文件使用，对于多用户系统或者网络服务器来也有独立挂载的必要。临时文件目录，也是最常出现问题的目录之一。</p><h4 id="usr"><a href="#usr" class="headerlink" title="/usr"></a>/usr</h4><p>文件系统</p><p>一般设置要3-15G，大部分的用户安装的软件程序都在这里。就像是Windows目录和Program Files目录。很多Linux家族系统有时还会把/usr/local单独作为挂载点使用。</p><h4 id="var"><a href="#var" class="headerlink" title="/var"></a>/var</h4><p>可变数据目录</p><p>包含系统运行时要改变的数据。通常这些数据所在的目录的大小是要经常变化的，系统日志记录也在/var/log下。一般多用户系统或者网络服务器要建立这个分区，设立这个分区，对系统日志的维护很有帮助。一般设置2-3G大小，也可以把硬盘余下空间全部分为var。</p><h4 id="srv"><a href="#srv" class="headerlink" title="/srv"></a>/srv</h4><p>系统服务目录</p><p>用来存放service服务启动所需的文件资料目录，不常改变。</p><h4 id="opt"><a href="#opt" class="headerlink" title="/opt"></a>/opt</h4><p>附加应用程序</p><p>存放可选的安装文件，个人一般把自己下载的软件资料存在里面，比如Office、QQ等等。</p><h4 id="swap"><a href="#swap" class="headerlink" title="swap"></a>swap</h4><p>交换分区</p><p>一般为内存2倍，最大指定2G即可</p><p>以下为其它常用的分区挂载点</p><h4 id="bin"><a href="#bin" class="headerlink" title="/bin"></a>/bin</h4><p>二进制可执行目录</p><p>存放二进制可执行程序，里面的程序可以直接通过命令行调用，而不需要进入程序所在的文件夹。</p><h4 id="sbin"><a href="#sbin" class="headerlink" title="/sbin"></a>/sbin</h4><p>系统管理员命令存放目录</p><p>存放标准系统管理员文件</p><h4 id="dev"><a href="#dev" class="headerlink" title="/dev"></a>/dev</h4><p>存放设备文件</p><p>驱动文件等</p>]]></content>
      
      
      <categories>
          
          <category> Basic Knowledge </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux Technology - Partition Disks </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>〆 编程规范</title>
      <link href="/2018/01/18/coding_style/"/>
      <url>/2018/01/18/coding_style/</url>
      
        <content type="html"><![CDATA[<p><strong><font color="#5A5AAD">⚠ Coding Style   </font></strong></p><h2 id="约定-本约定只是一种自我的约束，一些特定的附加约定随着项目的阶段而改变"><a href="#约定-本约定只是一种自我的约束，一些特定的附加约定随着项目的阶段而改变" class="headerlink" title="约定: 本约定只是一种自我的约束，一些特定的附加约定随着项目的阶段而改变"></a><font color="#FF5151">约定: </font>本约定只是一种自我的约束，一些特定的附加约定随着项目的阶段而改变</h2><p><font style="color: #394F6A; font-size: 20px; font-family: '微软雅黑'">[例如] PEP8规则</font><br><a id="more"></a></p><blockquote><p>用例的名字采用单词的首字母大写的形式，多个单词中使用空格。For: Withdraw Funds.<br>类名单词首字母大写，在图中/代码中 多单词的名字间没有空格，For: CheckingAccount.但是在文本中，为了提升可读性，单词之间引入空格。<br>属性的类型使用首字母大写的单词表示，For: Boolean，Integer.</p><blockquote><p>一个单独的命名对象，采取首字母小写的驼峰命名法<br>一个单独的未命名对象，采取冒号加类名，For: :CheckingAccount,有时候冒号会被省略<br>消息的命名总是首字母大写并且多单词组成(图、文本)全部必须具有空格。<br>文件名字全部采用小写字母，并且多单词之间用下划线，For: checking_account.js.<br>静态变量名称采取全部大写的字母，普通变量采取首字母小写的驼峰式<br>html元素，class的命名全部采用小写字母，多单词之间用-，For: checking-account<br>html元素，id的命名采用首字母小写的驼峰式<br>每个方法之间换2行，一行方法不能超过80个字符，js或者html等前端代码，可以稍微超出。<br>命名必须采用贱命合一的英文表示法<br>方法的命名采用首字母小写的驼峰式，并且必须为动词。For: updateByPrimaryKey.</p></blockquote></blockquote>]]></content>
      
      
      <categories>
          
          <category> Basic Knowledge </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Technology - Coding Style </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>〆 template [important key]</title>
      <link href="/2018/01/18/template/"/>
      <url>/2018/01/18/template/</url>
      
        <content type="html"><![CDATA[<p><strong><font color="#5A5AAD">A pearl is a temple built by pain around a grain of sand.</font></strong></p><h2 id="How-to-study-RS-整理了一些学习推荐系统的相关文献和书籍资料。"><a href="#How-to-study-RS-整理了一些学习推荐系统的相关文献和书籍资料。" class="headerlink" title="How to study RS: 整理了一些学习推荐系统的相关文献和书籍资料。"></a><font color="#FF5151">How to study RS: </font>整理了一些学习推荐系统的相关文献和书籍资料。</h2><font style="color: #394F6A; font-size: 20px; font-family: '微软雅黑'">[主要语言] C++/java</font><a id="more"></a><h1 id="Ochuunn"><a href="#Ochuunn" class="headerlink" title="Ochuunn"></a>Ochuunn</h1><h2 id="特点"><a href="#特点" class="headerlink" title="特点"></a>特点</h2><ul><li>文章界面很清晰，很适合阅读~</li><li>Google Search Console</li><li>Google Analytics</li><li><a href="https://livere.com/" target="_blank" rel="noopener">LiveRe</a> (我去掉了disqus, 国内不翻墙压根连不上)</li><li>打赏</li><li>页面滚动快捷键 (j, k, t, b, n, m 具体功能自己尝试, console 有提示~)</li></ul><h2 id="Demo"><a href="#Demo" class="headerlink" title="Demo"></a>Demo</h2><p><a href="http://ochukai.me" target="_blank" rel="noopener">I am Oliver</a></p><p><img src="avatar.jpg" alt="你想输入的替代文字"></p><h1 id="⚠-这里很重要"><a href="#⚠-这里很重要" class="headerlink" title="⚠ 这里很重要"></a>⚠ 这里很重要</h1><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-renderer-pug --save</span><br></pre></td></tr></table></figure><h2 id="Install"><a href="#Install" class="headerlink" title="Install"></a>Install</h2><ol><li>In the <code>root</code> directory:</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git clone https://github.com/ochukai/hexo-theme-ochuunn.git themes/ochuunn</span><br></pre></td></tr></table></figure><ol start="2"><li>Change the <code>theme</code> property in the <code>config.yml</code> file.</li></ol><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># theme: landscape</span></span><br><span class="line"><span class="attr">theme:</span> <span class="string">ochuunn</span></span><br></pre></td></tr></table></figure><h2 id="不足"><a href="#不足" class="headerlink" title="不足"></a>不足</h2><ul><li>不支持 link 类型的文章</li><li>不支持 category，只有 tag</li></ul><p>(在目录的最下面， 是 hexo 的测试文章，按 b 键直达~)</p><p>.ignore<br>git提交时过滤掉不需要提交的文件，很方便，有些本地文件是不需要提交到Git上的。</p><p>CamelCase<br>将不是驼峰格式的名称，快速转成驼峰格式，安装好后，选中要修改的名称，按快捷键shift+alt+u。</p><p>Lombok plugin<br>开发神器，可以简化你的实体类，让你i不再写get/set方法，还能快速的实现builder模式，以及链式调用方法，总之就是为了简化实体类而生的插件。</p><p>Mybatis plugin<br>可以在mapper接口中和mapper的xml文件中来回跳转，就想接口跳到实现类那样简单。</p><p>codehelper.generator<br>可以让你在创建一个对象并赋值的时候，快速的生成代码，不需要一个一个属性的向里面set,根据new关键字，自动生成掉用set方法的代码，还可以一键填入默认值。</p><p>GenAllSetter 特性</p><p>在Java方法中, 根据 new 关键词, 为Java Bean 生成所有Setter方法。<br>按GenAllSetter键两次, 会为Setter方法生成默认值。<br>可在Intellij Idea中为GenAllSetter设置快捷键。<br>如何使用:<br>将光标移动到 new 语句的下一行。<br>点击主菜单Tools-&gt; Codehelper-&gt; GenAllSetter, 或者按下GenAllSetter快捷键。<br>GenDaoCode 特性</p><p>根据Pojo 文件一键生成 Dao，Service，Xml，Sql文件。</p><p>Pojo文件更新后一键更新对应的Sql和mybatis xml文件。</p><p>提供insert，insertList，update，select，delete五种方法。</p><p>能够批量生成多个Pojo的对应的文件。</p><p>自动将pojo的注释添加到对应的Sql文件的注释内容部分中。</p><p>丰富的配置，如果没有配置文件，则会使用默认配置。</p><p>可以在Intellij Idea中快捷键配置中配置快捷键。</p><p>目前支持MySQL + Java，后续会支持更多的DB。</p><p>如果喜欢我们的插件，非常感谢您的分享。</p><p>GenDaoCode 使用方法</p><p>主菜单Tools-&gt; Codehelper-&gt; GenDaoCode 按键便可生成代码。</p><p>方法一：点击GenDaoCode，然后根据提示框输入Pojo名字，多个Pojo以 | 分隔。</p><p>Codehelper Generator会根据默认配置为您生成代码。</p><p>方法二：在工程目录下添加文件名为codehelper.properties的文件。</p><p>点击GenDaoCode，Codehelper Generator会根据您的配置文件为您生成代码</p><p>LecturesCS10 : The Beauty and Joy of Computing - check the Distributed Computing (interesting) (<a href="http://inst.eecs.berkeley.edu/~cs10/sp11/)CS" target="_blank" rel="noopener">http://inst.eecs.berkeley.edu/~cs10/sp11/)CS</a> 162 Operating Systems and Systems Programming -section Networks and Distributed Systems (<a href="http://webcast.berkeley.edu/course_details.php?seriesid=1906978341)Google" target="_blank" rel="noopener">http://webcast.berkeley.edu/course_details.php?seriesid=1906978341)Google</a>: Cluster Computing and MapReduce (<a href="http://code.google.com/edu/submissions/mapreduce-minilecture/listing.html)Publications" target="_blank" rel="noopener">http://code.google.com/edu/submissions/mapreduce-minilecture/listing.html)Publications</a> CEPH (<a href="http://ceph.newdream.net/publications/)TheoryDistributed" target="_blank" rel="noopener">http://ceph.newdream.net/publications/)TheoryDistributed</a> systems principles and paradigms (<a href="http://rads.stackoverflow.com/amzn/click/0130888931)An" target="_blank" rel="noopener">http://rads.stackoverflow.com/amzn/click/0130888931)An</a> introduction to distributed algorithms By Valmir C. Barbosa (<a href="http://books.google.com/books?id=fPaGrO8KFqQC&amp;printsec=frontcover&amp;dq=ISBN%3a%200262024128&amp;source=bl&amp;ots=QpvNn0J_Or&amp;sig=np9ReVb48vsvTY0ZorrVNBpg_hI&amp;hl=en&amp;ei=r6WoTaHSLcn3rQfk_oioCA&amp;sa=X&amp;oi=book_result&amp;ct=result&amp;resnum=1&amp;ved=0CBMQ6AEwAA#v=onepage&amp;q&amp;f=false)Distributed" target="_blank" rel="noopener">http://books.google.com/books?id=fPaGrO8KFqQC&amp;printsec=frontcover&amp;dq=ISBN%3a%200262024128&amp;source=bl&amp;ots=QpvNn0J_Or&amp;sig=np9ReVb48vsvTY0ZorrVNBpg_hI&amp;hl=en&amp;ei=r6WoTaHSLcn3rQfk_oioCA&amp;sa=X&amp;oi=book_result&amp;ct=result&amp;resnum=1&amp;ved=0CBMQ6AEwAA#v=onepage&amp;q&amp;f=false)Distributed</a> Systems: An Algorithmic Approach (<a href="http://rads.stackoverflow.com/amzn/click/1584885645)Design" target="_blank" rel="noopener">http://rads.stackoverflow.com/amzn/click/1584885645)Design</a> and analysis of distributed algorithms By Nicola Santoro (<a href="http://books.google.com/books?id=iXlBscntcUgC&amp;printsec=frontcover&amp;dq=ISBN%200471719978&amp;source=bl&amp;ots=fXmWi9Ja-n&amp;sig=h7ew1WFPXjQSyznQUJZP4__9wbI&amp;hl=en&amp;ei=7KaoTZnBDo_MrQe8wYWoCA&amp;sa=X&amp;oi=book_result&amp;ct=result&amp;resnum=1&amp;ved=0CBMQ6AEwAA#v=onepage&amp;q&amp;f=false)Distributed" target="_blank" rel="noopener">http://books.google.com/books?id=iXlBscntcUgC&amp;printsec=frontcover&amp;dq=ISBN%200471719978&amp;source=bl&amp;ots=fXmWi9Ja-n&amp;sig=h7ew1WFPXjQSyznQUJZP4__9wbI&amp;hl=en&amp;ei=7KaoTZnBDo_MrQe8wYWoCA&amp;sa=X&amp;oi=book_result&amp;ct=result&amp;resnum=1&amp;ved=0CBMQ6AEwAA#v=onepage&amp;q&amp;f=false)Distributed</a> network systems: from concepts to implementations (<a href="http://books.google.com/books?id=_pYyEgj0fX8C&amp;printsec=frontcover&amp;dq=ISBN-10%3a%200387238395&amp;source=bl&amp;ots=fa1zPXorXp&amp;sig=1IDXLYBcVbPdsCeEbLRTTlomfpM&amp;hl=en&amp;ei=ZaWoTfrXB4eurAfDrJWnCA&amp;sa=X&amp;oi=book_result&amp;ct=result&amp;resnum=2&amp;ved=0CBwQ6AEwAQ#v=onepage&amp;q&amp;f=false)Distributed" target="_blank" rel="noopener">http://books.google.com/books?id=_pYyEgj0fX8C&amp;printsec=frontcover&amp;dq=ISBN-10%3a%200387238395&amp;source=bl&amp;ots=fa1zPXorXp&amp;sig=1IDXLYBcVbPdsCeEbLRTTlomfpM&amp;hl=en&amp;ei=ZaWoTfrXB4eurAfDrJWnCA&amp;sa=X&amp;oi=book_result&amp;ct=result&amp;resnum=2&amp;ved=0CBwQ6AEwAQ#v=onepage&amp;q&amp;f=false)Distributed</a> systems security: issues, processes, and solutions (<a href="http://books.google.com/books?id=ygWEYjk_rEUC&amp;printsec=frontcover&amp;dq=ISBN%3a%200470519886&amp;source=bl&amp;ots=xX09rNCXO-&amp;sig=JFKaStVHQgKrF-F7UP9m9WqZLMg&amp;hl=en&amp;ei=CKWoTcXLNYrXrQeg_oWoCA&amp;sa=X&amp;oi=book_result&amp;ct=result&amp;resnum=1&amp;ved=0CBMQ6AEwAA#v=onepage&amp;q&amp;f=false)Principles" target="_blank" rel="noopener">http://books.google.com/books?id=ygWEYjk_rEUC&amp;printsec=frontcover&amp;dq=ISBN%3a%200470519886&amp;source=bl&amp;ots=xX09rNCXO-&amp;sig=JFKaStVHQgKrF-F7UP9m9WqZLMg&amp;hl=en&amp;ei=CKWoTcXLNYrXrQeg_oWoCA&amp;sa=X&amp;oi=book_result&amp;ct=result&amp;resnum=1&amp;ved=0CBMQ6AEwAA#v=onepage&amp;q&amp;f=false)Principles</a> of Distributed Database Systems (<a href="http://books.google.com/books?id=TOBaLQMuNV4C&amp;printsec=frontcover&amp;dq=ISBN%3a%201441988335&amp;source=bl&amp;ots=LpxihM-W_9&amp;sig=qSwyqG9DrW8-EKJLG-ITaFNGIuQ&amp;hl=en&amp;ei=_6ioTa6UNsSsrAebwfmnCA&amp;sa=X&amp;oi=book_result&amp;ct=result&amp;resnum=1&amp;ved=0CBwQ6AEwAA#v=onepage&amp;q&amp;f=false)Pattern-Oriented" target="_blank" rel="noopener">http://books.google.com/books?id=TOBaLQMuNV4C&amp;printsec=frontcover&amp;dq=ISBN%3a%201441988335&amp;source=bl&amp;ots=LpxihM-W_9&amp;sig=qSwyqG9DrW8-EKJLG-ITaFNGIuQ&amp;hl=en&amp;ei=_6ioTa6UNsSsrAebwfmnCA&amp;sa=X&amp;oi=book_result&amp;ct=result&amp;resnum=1&amp;ved=0CBwQ6AEwAA#v=onepage&amp;q&amp;f=false)Pattern-Oriented</a> Software Architecture: A Pattern Language for Distributed (<a href="http://books.google.com/books?id=WVQF2PK2tlgC&amp;printsec=frontcover&amp;dq=ISBN%3a%200470059028&amp;source=bl&amp;ots=jTc3Ri_9cs&amp;sig=n1Ci_a2xMSPNobBx6cGCIhj1QrM&amp;hl=en&amp;ei=L6aoTeaSKNDIrQfOqOypCA&amp;sa=X&amp;oi=book_result&amp;ct=result&amp;resnum=1&amp;ved=0CBMQ6AEwAA#v=onepage&amp;q&amp;f=false)Distributed" target="_blank" rel="noopener">http://books.google.com/books?id=WVQF2PK2tlgC&amp;printsec=frontcover&amp;dq=ISBN%3a%200470059028&amp;source=bl&amp;ots=jTc3Ri_9cs&amp;sig=n1Ci_a2xMSPNobBx6cGCIhj1QrM&amp;hl=en&amp;ei=L6aoTeaSKNDIrQfOqOypCA&amp;sa=X&amp;oi=book_result&amp;ct=result&amp;resnum=1&amp;ved=0CBMQ6AEwAA#v=onepage&amp;q&amp;f=false)Distributed</a> and parallel systems: from cluster to grid computing (<a href="http://books.google.com/books?id=XKgwLhMZmKAC&amp;printsec=frontcover&amp;dq=ISBN%3a%200387698574&amp;source=bl&amp;ots=h87M4gQ3cz&amp;sig=X3ZlkzBYNIzWthyGCme4KIPLUgk&amp;hl=en&amp;ei=fKaoTf-jMcHWrQeSmJDyCA&amp;sa=X&amp;oi=book_result&amp;ct=result&amp;resnum=1&amp;ved=0CBcQ6AEwAA#v=onepage&amp;q&amp;f=false)Distributed" target="_blank" rel="noopener">http://books.google.com/books?id=XKgwLhMZmKAC&amp;printsec=frontcover&amp;dq=ISBN%3a%200387698574&amp;source=bl&amp;ots=h87M4gQ3cz&amp;sig=X3ZlkzBYNIzWthyGCme4KIPLUgk&amp;hl=en&amp;ei=fKaoTf-jMcHWrQeSmJDyCA&amp;sa=X&amp;oi=book_result&amp;ct=result&amp;resnum=1&amp;ved=0CBcQ6AEwAA#v=onepage&amp;q&amp;f=false)Distributed</a> Computing: Fundamentals, Simulations, and Advanced Topics (<a href="http://rads.stackoverflow.com/amzn/click/0471453242)Advanced" target="_blank" rel="noopener">http://rads.stackoverflow.com/amzn/click/0471453242)Advanced</a> distributed systems: third international school and …, Volume 3 (<a href="http://books.google.com/books?id=gLyeWkC-OQ4C&amp;printsec=frontcover&amp;dq=ISBN%3a%203540221727&amp;source=bl&amp;ots=W2uoBB4hPD&amp;sig=r4M7WwyM8C3-iektNV4I2oRk5Hw&amp;hl=en&amp;ei=tqSoTYPlB5GrrAei3ICoCA&amp;sa=X&amp;oi=book_result&amp;ct=result&amp;resnum=1&amp;ved=0CBMQ6AEwAA#v=onepage&amp;q&amp;f=false)Distributed" target="_blank" rel="noopener">http://books.google.com/books?id=gLyeWkC-OQ4C&amp;printsec=frontcover&amp;dq=ISBN%3a%203540221727&amp;source=bl&amp;ots=W2uoBB4hPD&amp;sig=r4M7WwyM8C3-iektNV4I2oRk5Hw&amp;hl=en&amp;ei=tqSoTYPlB5GrrAei3ICoCA&amp;sa=X&amp;oi=book_result&amp;ct=result&amp;resnum=1&amp;ved=0CBMQ6AEwAA#v=onepage&amp;q&amp;f=false)Distributed</a> data management for grid computing (<a href="http://books.google.com/books?id=biIxEDynbpMC&amp;printsec=frontcover&amp;dq=ISBN%3a%200471687197&amp;source=bl&amp;ots=oraHUvLUxK&amp;sig=93APYZC9T30jNpI2p5IbYrP8Zl4&amp;hl=en&amp;ei=bKeoTdfcD4PtrAfHzoinCA&amp;sa=X&amp;oi=book_result&amp;ct=result&amp;resnum=1&amp;ved=0CBMQ6AEwAA#v=onepage&amp;q&amp;f=false)Distributed" target="_blank" rel="noopener">http://books.google.com/books?id=biIxEDynbpMC&amp;printsec=frontcover&amp;dq=ISBN%3a%200471687197&amp;source=bl&amp;ots=oraHUvLUxK&amp;sig=93APYZC9T30jNpI2p5IbYrP8Zl4&amp;hl=en&amp;ei=bKeoTdfcD4PtrAfHzoinCA&amp;sa=X&amp;oi=book_result&amp;ct=result&amp;resnum=1&amp;ved=0CBMQ6AEwAA#v=onepage&amp;q&amp;f=false)Distributed</a> multimedia retrieval strategies for large scale networked systems (<a href="http://books.google.com/books?id=6NNtMkw3zKsC&amp;printsec=frontcover&amp;dq=ISBN%3a%200387288732&amp;source=bl&amp;ots=8y8olIZJx9&amp;sig=5FjhddaT_gkwf5VFEPDsG3Nxe_E&amp;hl=en&amp;ei=wKeoTefLCcq3rAeGqYWoCA&amp;sa=X&amp;oi=book_result&amp;ct=result&amp;resnum=1&amp;ved=0CBMQ6AEwAA#v=onepage&amp;q&amp;f=false)New" target="_blank" rel="noopener">http://books.google.com/books?id=6NNtMkw3zKsC&amp;printsec=frontcover&amp;dq=ISBN%3a%200387288732&amp;source=bl&amp;ots=8y8olIZJx9&amp;sig=5FjhddaT_gkwf5VFEPDsG3Nxe_E&amp;hl=en&amp;ei=wKeoTefLCcq3rAeGqYWoCA&amp;sa=X&amp;oi=book_result&amp;ct=result&amp;resnum=1&amp;ved=0CBMQ6AEwAA#v=onepage&amp;q&amp;f=false)New</a> horizons of parallel and distributed computing (<a href="http://books.google.com/books?id=32oUVpzVNBQC&amp;printsec=frontcover&amp;dq=ISBN%3a%200387244344&amp;source=bl&amp;ots=JY_TRyTmUt&amp;sig=8URoXyf5grzEfXm31LXvRL3Y0sM&amp;hl=en&amp;ei=5KeoTZmOBM7irAf5hPGnCA&amp;sa=X&amp;oi=book_result&amp;ct=result&amp;resnum=1&amp;ved=0CBMQ6AEwAA#v=onepage&amp;q&amp;f=false)Elements" target="_blank" rel="noopener">http://books.google.com/books?id=32oUVpzVNBQC&amp;printsec=frontcover&amp;dq=ISBN%3a%200387244344&amp;source=bl&amp;ots=JY_TRyTmUt&amp;sig=8URoXyf5grzEfXm31LXvRL3Y0sM&amp;hl=en&amp;ei=5KeoTZmOBM7irAf5hPGnCA&amp;sa=X&amp;oi=book_result&amp;ct=result&amp;resnum=1&amp;ved=0CBMQ6AEwAA#v=onepage&amp;q&amp;f=false)Elements</a> of distributed algorithms: modeling and analysis with Petri nets (<a href="http://books.google.com/books?id=I4Ft3T0jRfIC&amp;printsec=frontcover&amp;dq=ISBN%3a%203540627529&amp;source=bl&amp;ots=0ZQnwcegLO&amp;sig=CkljuyrkxDX-_jA2ijo7j6pGxZQ&amp;hl=en&amp;ei=eKioTfScI8ymrAe7yomoCA&amp;sa=X&amp;oi=book_result&amp;ct=result&amp;resnum=1&amp;ved=0CBcQ6AEwAA#v=onepage&amp;q&amp;f=false)ProgrammingParallel" target="_blank" rel="noopener">http://books.google.com/books?id=I4Ft3T0jRfIC&amp;printsec=frontcover&amp;dq=ISBN%3a%203540627529&amp;source=bl&amp;ots=0ZQnwcegLO&amp;sig=CkljuyrkxDX-_jA2ijo7j6pGxZQ&amp;hl=en&amp;ei=eKioTfScI8ymrAe7yomoCA&amp;sa=X&amp;oi=book_result&amp;ct=result&amp;resnum=1&amp;ved=0CBcQ6AEwAA#v=onepage&amp;q&amp;f=false)ProgrammingParallel</a> and Distributed Programming Using C++ (<a href="http://www.canadapost.ca/shopper/items/1006730/Parallel-and-Distributed-0321544676)Distributed" target="_blank" rel="noopener">http://www.canadapost.ca/shopper/items/1006730/Parallel-and-Distributed-0321544676)Distributed</a> .NET programming in C# (<a href="http://www.google.com/products/catalog?hl=en&amp;biw=1352&amp;bih=839&amp;q=ISBN%3a%201590590392&amp;um=1&amp;ie=UTF-8&amp;cid=6743176020645370485&amp;sa=X&amp;ei=6amoTc3qEMTVrQec4JGoCA&amp;ved=0CFkQ8wIwCg#)Java" target="_blank" rel="noopener">http://www.google.com/products/catalog?hl=en&amp;biw=1352&amp;bih=839&amp;q=ISBN%3a%201590590392&amp;um=1&amp;ie=UTF-8&amp;cid=6743176020645370485&amp;sa=X&amp;ei=6amoTc3qEMTVrQec4JGoCA&amp;ved=0CFkQ8wIwCg#)Java</a> network programming and distributed computing (<a href="http://books.google.com/books?id=vhwlwVVsUlgC&amp;printsec=frontcover&amp;dq=ISBN%3a%200201710374&amp;source=bl&amp;ots=UyX2BmUI0v&amp;sig=OzJrlo2iOnYNt0U7iYd2mo6b1kk&amp;hl=en&amp;ei=JaeoTZfaGonmrAf035SnCA&amp;sa=X&amp;oi=book_result&amp;ct=result&amp;resnum=1&amp;ved=0CBMQ6AEwAA#v=onepage&amp;q=ISBN%3a%200201710374&amp;f=false)Java" target="_blank" rel="noopener">http://books.google.com/books?id=vhwlwVVsUlgC&amp;printsec=frontcover&amp;dq=ISBN%3a%200201710374&amp;source=bl&amp;ots=UyX2BmUI0v&amp;sig=OzJrlo2iOnYNt0U7iYd2mo6b1kk&amp;hl=en&amp;ei=JaeoTZfaGonmrAf035SnCA&amp;sa=X&amp;oi=book_result&amp;ct=result&amp;resnum=1&amp;ved=0CBMQ6AEwAA#v=onepage&amp;q=ISBN%3a%200201710374&amp;f=false)Java</a> Distributed Computing (<a href="http://oreilly.com/catalog/9781565922068)Hadoop" target="_blank" rel="noopener">http://oreilly.com/catalog/9781565922068)Hadoop</a>: The Definitive Guide (<a href="http://oreilly.com/catalog/0636920010388/)Distributed" target="_blank" rel="noopener">http://oreilly.com/catalog/0636920010388/)Distributed</a> systems architecture: a middleware approach (<a href="http://books.google.com/books?id=BLx8408_s4cC&amp;printsec=frontcover&amp;dq=ISBN%201558606483&amp;source=bl&amp;ots=rI__pXaEXk&amp;sig=JyOtai5x8W5Ht-ZRZBn93usl39A&amp;hl=en&amp;ei=MamoTZXyCIPOrQe1_4mnCA&amp;sa=X&amp;oi=book_result&amp;ct=result&amp;resnum=1&amp;ved=0CBMQ6AEwAA#v=onepage&amp;q&amp;f=false)Tools" target="_blank" rel="noopener">http://books.google.com/books?id=BLx8408_s4cC&amp;printsec=frontcover&amp;dq=ISBN%201558606483&amp;source=bl&amp;ots=rI__pXaEXk&amp;sig=JyOtai5x8W5Ht-ZRZBn93usl39A&amp;hl=en&amp;ei=MamoTZXyCIPOrQe1_4mnCA&amp;sa=X&amp;oi=book_result&amp;ct=result&amp;resnum=1&amp;ved=0CBMQ6AEwAA#v=onepage&amp;q&amp;f=false)Tools</a> and environments for parallel and distributed computing (<a href="http://books.google.com/books?id=BLx8408_s4cC&amp;printsec=frontcover&amp;dq=ISBN%201558606483&amp;source=bl&amp;ots=rI__pXaEXk&amp;sig=JyOtai5x8W5Ht-ZRZBn93usl39A&amp;hl=en&amp;ei=MamoTZXyCIPOrQe1_4mnCA&amp;sa=X&amp;oi=book_result&amp;ct=result&amp;resnum=1&amp;ved=0CBMQ6AEwAA#v=onepage&amp;q&amp;f=false" target="_blank" rel="noopener">http://books.google.com/books?id=BLx8408_s4cC&amp;printsec=frontcover&amp;dq=ISBN%201558606483&amp;source=bl&amp;ots=rI__pXaEXk&amp;sig=JyOtai5x8W5Ht-ZRZBn93usl39A&amp;hl=en&amp;ei=MamoTZXyCIPOrQe1_4mnCA&amp;sa=X&amp;oi=book_result&amp;ct=result&amp;resnum=1&amp;ved=0CBMQ6AEwAA#v=onepage&amp;q&amp;f=false</a>)</p><p>统计</p><ol><li>Frequentist StatisticsCasella, G. and Berger, R.L. (2001). “Statistical Inference” Duxbury Press.—Intermediate-level statistics book.Ferguson, T. (1996). “A Course in Large Sample Theory” Chapman &amp; Hall/CRC.—For a slightly more advanced book that’s quite clear on mathematical techniques.Lehmann, E. (2004). “Elements of Large-Sample Theory” Springer.—About asymptotics which is a good starting place.Vaart, A.W. van der (1998). “Asymptotic Statistics” Cambridge.—A book that shows how many ideas in inference (M estimation, the bootstrap, semiparametrics, etc) repose on top of empirical process theory.Tsybakov, Alexandre B. (2008) “Introduction to Nonparametric Estimation” Springer.—Tools for obtaining lower bounds on estimators.B. Efron (2010) “Large-Scale Inference: Empirical Bayes Methods for Estimation, Testing, and Prediction” Cambridge,.—A thought-provoking book.2. Bayesian StatisticsGelman, A. et al. (2003). “Bayesian Data Analysis” Chapman &amp; Hall/CRC.—About Bayesian.Robert, C. and Casella, G. (2005). “Monte Carlo Statistical Methods” Springer.—about Bayesian computation.3. Probability TheoryGrimmett, G. and Stirzaker, D. (2001). “Probability and Random Processes” Oxford.—Intermediate-level probability book.Pollard, D. (2001). “A User’s Guide to Measure Theoretic Probability” Cambridge.—More advanced level probability book.Durrett, R. (2005). “Probability: Theory and Examples” Duxbury.—Standard advanced probability book.4. OptimizationBertsimas, D. and Tsitsiklis, J. (1997). “Introduction to Linear Optimization” Athena.—A good starting book on linear optimization that will prepare you for convex optimization.Boyd, S. and Vandenberghe, L. (2004). “Convex Optimization” Cambridge.Y. Nesterov and Iu E. Nesterov (2003). “Introductory Lectures on Convex Optimization” Springer.—A start to understand lower bounds in optimization.5. Linear AlgebraGolub, G., and Van Loan, C. (1996). “Matrix Computations” Johns Hopkins.—Getting a full understanding of algorithmic linear algebra is also important.6. Information TheoryCover, T. and Thomas, J. “Elements of Information Theory” Wiley.—Classic information theory.7. Functional AnalysisKreyszig, E. (1989). “Introductory Functional Analysis with Applications” Wiley.—Functional analysis is essentially linear algebra in infinite dimensions, and it’s necessary for kernel methods, for nonparametric Bayesian methods, and for various other topics.</li></ol>]]></content>
      
      
      <categories>
          
          <category> Template </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Technology </tag>
            
            <tag> Template </tag>
            
            <tag> tags1 </tag>
            
        </tags>
      
    </entry>
    
  
  
</search>
